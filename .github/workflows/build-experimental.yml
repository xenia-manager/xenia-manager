name: Build experimental build

permissions:
  contents: write
  actions: read

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - dev

jobs:
  build_xm_experimental:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: windows-latest
    
    strategy:
      matrix:
        targetplatform: [x64]
        ChannelName: [Release]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x # Adjust this version when updating to .NET 9

      - name: Restore dependencies
        run: dotnet restore "XeniaManager.DesktopApp/XeniaManager.DesktopApp.csproj"

      - name: Test
        run: dotnet test "XeniaManager.DesktopApp/XeniaManager.DesktopApp.csproj"

      - name: Publish DesktopApp
        run: dotnet publish -c Release -r win-x64 --self-contained false -p:DebugType=none /p:PublishSingleFile=true -o publish/desktop "XeniaManager.DesktopApp/XeniaManager.DesktopApp.csproj"

      - name: Publish Updater
        run: dotnet publish -c Release -r win-x64 --self-contained false -p:DebugType=none /p:PublishSingleFile=true -o publish/updater "XeniaManager.Updater/XeniaManager.Updater.csproj"

      - name: Package
        run: |
          Compress-Archive -Path .\publish\desktop\*,.\publish\updater\* -DestinationPath .\xenia_manager_experimental.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: xenia_manager_experimental
          path: ./xenia_manager_experimental.zip
          
      - name: Get short commit SHA
        id: get_commit
        shell: pwsh
        run: echo "COMMIT_SHA=$($env:GITHUB_SHA.Substring(0,7))" >> $env:GITHUB_ENV

      - name: Check if release exists in the target repository
        id: check_release
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/shazzaam7/xm-experimental-builds/releases/tags/${{ env.COMMIT_SHA }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }} # Use a PAT with access to the target repository
        continue-on-error: true

      - name: Create new release in the target repository
        if: steps.check_release.outputs.status != '200'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }} # Use the PAT here
        with:
          repository: shazzaam7/xm-experimental-builds # Specify the target repository
          tag_name: ${{ env.COMMIT_SHA }}
          release_name: Experimental Build ${{ env.COMMIT_SHA }}
          prerelease: true

      - name: Upload release asset to the target repository
        if: steps.check_release.outputs.status != '200'
        id: upload_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }} # Use the PAT here
        with:
          repository: shazzaam7/xm-experimental-builds # Specify the target repository
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./xenia_manager_experimental.zip
          asset_name: xenia_manager_experimental.zip
          asset_content_type: application/zip
