//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XeniaManager.Desktop.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XeniaManager.Desktop.Resources.Language.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A comprehensive management tool for Xenia Xbox 360 emulator. Easily install, update, and manage different versions of Xenia emulator with an intuitive interface..
        /// </summary>
        public static string AboutPage_AppDescription {
            get {
                return ResourceManager.GetString("AboutPage_AppDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check For Updates.
        /// </summary>
        public static string AboutPage_CheckForUpdatesButtonText {
            get {
                return ResourceManager.GetString("AboutPage_CheckForUpdatesButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub.
        /// </summary>
        public static string AboutPage_GithubButtonText {
            get {
                return ResourceManager.GetString("AboutPage_GithubButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legal information and acknowledgments.
        /// </summary>
        public static string AboutPage_LicenseCreditsSideText {
            get {
                return ResourceManager.GetString("AboutPage_LicenseCreditsSideText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License &amp; Credits.
        /// </summary>
        public static string AboutPage_LicenseCreditsText {
            get {
                return ResourceManager.GetString("AboutPage_LicenseCreditsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This software is licensed under the BSD-3-Clause License..
        /// </summary>
        public static string AboutPage_LicenseText {
            get {
                return ResourceManager.GetString("AboutPage_LicenseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Website.
        /// </summary>
        public static string AboutPage_WebsiteButtonText {
            get {
                return ResourceManager.GetString("AboutPage_WebsiteButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gameplay.
        /// </summary>
        public static string CompatibilityRating_Gameplay {
            get {
                return ResourceManager.GetString("CompatibilityRating_Gameplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loads.
        /// </summary>
        public static string CompatibilityRating_Loads {
            get {
                return ResourceManager.GetString("CompatibilityRating_Loads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playable.
        /// </summary>
        public static string CompatibilityRating_Playable {
            get {
                return ResourceManager.GetString("CompatibilityRating_Playable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string CompatibilityRating_Unknown {
            get {
                return ResourceManager.GetString("CompatibilityRating_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unplayable.
        /// </summary>
        public static string CompatibilityRating_Unplayable {
            get {
                return ResourceManager.GetString("CompatibilityRating_Unplayable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Media ID.
        /// </summary>
        public static string GameDetailsEditor_MediaId {
            get {
                return ResourceManager.GetString("GameDetailsEditor_MediaId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title.
        /// </summary>
        public static string GameDetailsEditor_Title {
            get {
                return ResourceManager.GetString("GameDetailsEditor_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title ID.
        /// </summary>
        public static string GameDetailsEditor_TitleId {
            get {
                return ResourceManager.GetString("GameDetailsEditor_TitleId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Additional Patches.
        /// </summary>
        public static string LibraryGameButton_AddAdditionalPatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_AddAdditionalPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change game path.
        /// </summary>
        public static string LibraryGameButton_ChangeGamePath {
            get {
                return ResourceManager.GetString("LibraryGameButton_ChangeGamePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Patches.
        /// </summary>
        public static string LibraryGameButton_ConfigurePatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_ConfigurePatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content.
        /// </summary>
        public static string LibraryGameButton_ContentMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_ContentMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desktop.
        /// </summary>
        public static string LibraryGameButton_DesktopShortcut {
            get {
                return ResourceManager.GetString("LibraryGameButton_DesktopShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Patches.
        /// </summary>
        public static string LibraryGameButton_DownloadPatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_DownloadPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        public static string LibraryGameButton_EditGameDetails {
            get {
                return ResourceManager.GetString("LibraryGameButton_EditGameDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string LibraryGameButton_EditGameSettings {
            get {
                return ResourceManager.GetString("LibraryGameButton_EditGameSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Game.
        /// </summary>
        public static string LibraryGameButton_EditMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_EditMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Content.
        /// </summary>
        public static string LibraryGameButton_InstallContent {
            get {
                return ResourceManager.GetString("LibraryGameButton_InstallContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Patches.
        /// </summary>
        public static string LibraryGameButton_InstallPatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_InstallPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulator &amp; Game Path.
        /// </summary>
        public static string LibraryGameButton_LocationMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_LocationMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open compatibility page.
        /// </summary>
        public static string LibraryGameButton_OpenCompatibilityPage {
            get {
                return ResourceManager.GetString("LibraryGameButton_OpenCompatibilityPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Save Backup.
        /// </summary>
        public static string LibraryGameButton_OpenSaveBackup {
            get {
                return ResourceManager.GetString("LibraryGameButton_OpenSaveBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches.
        /// </summary>
        public static string LibraryGameButton_PatchesMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_PatchesMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} hours.
        /// </summary>
        public static string LibraryGameButton_PlaytimeHours {
            get {
                return ResourceManager.GetString("LibraryGameButton_PlaytimeHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} minutes.
        /// </summary>
        public static string LibraryGameButton_PlaytimeMinutes {
            get {
                return ResourceManager.GetString("LibraryGameButton_PlaytimeMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never Played.
        /// </summary>
        public static string LibraryGameButton_PlaytimeNeverPlayed {
            get {
                return ResourceManager.GetString("LibraryGameButton_PlaytimeNeverPlayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time played:.
        /// </summary>
        public static string LibraryGameButton_PlaytimeTimePlayed {
            get {
                return ResourceManager.GetString("LibraryGameButton_PlaytimeTimePlayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from Xenia Manager.
        /// </summary>
        public static string LibraryGameButton_RemoveGameHeaderText {
            get {
                return ResourceManager.GetString("LibraryGameButton_RemoveGameHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Patches.
        /// </summary>
        public static string LibraryGameButton_RemovePatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_RemovePatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Shortcut.
        /// </summary>
        public static string LibraryGameButton_ShortcutMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_ShortcutMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam.
        /// </summary>
        public static string LibraryGameButton_SteamShortcut {
            get {
                return ResourceManager.GetString("LibraryGameButton_SteamShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View installed content.
        /// </summary>
        public static string LibraryGameButton_ViewInstalledContent {
            get {
                return ResourceManager.GetString("LibraryGameButton_ViewInstalledContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compatibility Rating.
        /// </summary>
        public static string LibraryMenuItemShow_CompatibilityRating {
            get {
                return ResourceManager.GetString("LibraryMenuItemShow_CompatibilityRating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Title.
        /// </summary>
        public static string LibraryMenuItemShow_GameTitle {
            get {
                return ResourceManager.GetString("LibraryMenuItemShow_GameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string MainWindow_About {
            get {
                return ResourceManager.GetString("MainWindow_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows information about Xenia Manager.
        /// </summary>
        public static string MainWindow_AboutTooltip {
            get {
                return ResourceManager.GetString("MainWindow_AboutTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Library.
        /// </summary>
        public static string MainWindow_GameLibrary {
            get {
                return ResourceManager.GetString("MainWindow_GameLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open your game library.
        /// </summary>
        public static string MainWindow_GameLibraryTooltip {
            get {
                return ResourceManager.GetString("MainWindow_GameLibraryTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage.
        /// </summary>
        public static string MainWindow_Manage {
            get {
                return ResourceManager.GetString("MainWindow_Manage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage your installed Xenia.
        /// </summary>
        public static string MainWindow_ManageTooltip {
            get {
                return ResourceManager.GetString("MainWindow_ManageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Xenia.
        /// </summary>
        public static string MainWindow_OpenXenia {
            get {
                return ResourceManager.GetString("MainWindow_OpenXenia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Xenia standalone.
        /// </summary>
        public static string MainWindow_OpenXeniaTooltip {
            get {
                return ResourceManager.GetString("MainWindow_OpenXeniaTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string MainWindow_Settings {
            get {
                return ResourceManager.GetString("MainWindow_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens Xenia Manager settings.
        /// </summary>
        public static string MainWindow_SettingsTooltip {
            get {
                return ResourceManager.GetString("MainWindow_SettingsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings (Xenia).
        /// </summary>
        public static string MainWindow_XeniaSettings {
            get {
                return ResourceManager.GetString("MainWindow_XeniaSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens Xenia settings.
        /// </summary>
        public static string MainWindow_XeniaSettingsTooltip {
            get {
                return ResourceManager.GetString("MainWindow_XeniaSettingsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string ManagePage_Install {
            get {
                return ResourceManager.GetString("ManagePage_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string ManagePage_Uninstall {
            get {
                return ResourceManager.GetString("ManagePage_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string ManagePage_Update {
            get {
                return ResourceManager.GetString("ManagePage_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Installed.
        /// </summary>
        public static string ManagePage_XeniaNotInstalled {
            get {
                return ResourceManager.GetString("ManagePage_XeniaNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to add the game with default box art?\nPress &apos;Yes&apos; to proceed, or &apos;No&apos; to cancel..
        /// </summary>
        public static string MessageBox_AddGameWithDefaultArtworkText {
            get {
                return ResourceManager.GetString("MessageBox_AddGameWithDefaultArtworkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm exit.
        /// </summary>
        public static string MessageBox_ConfirmExit {
            get {
                return ResourceManager.GetString("MessageBox_ConfirmExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to delete the save file for {0}?.
        /// </summary>
        public static string MessageBox_DeleteSaveGameText {
            get {
                return ResourceManager.GetString("MessageBox_DeleteSaveGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete save game.
        /// </summary>
        public static string MessageBox_DeleteSaveGameTitle {
            get {
                return ResourceManager.GetString("MessageBox_DeleteSaveGameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to uninstall Xenia Canary?\nThis will remove all save files and updates alongside the emulator..
        /// </summary>
        public static string MessageBox_DeleteXeniaCanaryText {
            get {
                return ResourceManager.GetString("MessageBox_DeleteXeniaCanaryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall Xenia Canary.
        /// </summary>
        public static string MessageBox_DeleteXeniaCanaryTitle {
            get {
                return ResourceManager.GetString("MessageBox_DeleteXeniaCanaryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string MessageBox_Error {
            get {
                return ResourceManager.GetString("MessageBox_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has no game save backups.
        /// </summary>
        public static string MessageBox_MissingGameSaveBackupsText {
            get {
                return ResourceManager.GetString("MessageBox_MissingGameSaveBackupsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No game save backups.
        /// </summary>
        public static string MessageBox_MissingGameSaveBackupsTitle {
            get {
                return ResourceManager.GetString("MessageBox_MissingGameSaveBackupsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected Title ID ({0}) doesn&apos;t match selected game ({1}).\nContinue anyway?.
        /// </summary>
        public static string MessageBox_MissmatchedTitleIdText {
            get {
                return ResourceManager.GetString("MessageBox_MissmatchedTitleIdText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mismatched Title ID.
        /// </summary>
        public static string MessageBox_MissmatchedTitleIdTitle {
            get {
                return ResourceManager.GetString("MessageBox_MissmatchedTitleIdTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string MessageBox_Remove {
            get {
                return ResourceManager.GetString("MessageBox_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the content folder for {0}?\nThis will delete all installed title updates, save games, and related content..
        /// </summary>
        public static string MessageBox_RemoveGameContentText {
            get {
                return ResourceManager.GetString("MessageBox_RemoveGameContentText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove {0} content.
        /// </summary>
        public static string MessageBox_RemoveGameContentTitle {
            get {
                return ResourceManager.GetString("MessageBox_RemoveGameContentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to remove {0}?.
        /// </summary>
        public static string MessageBox_RemoveGameText {
            get {
                return ResourceManager.GetString("MessageBox_RemoveGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        public static string MessageBox_Success {
            get {
                return ResourceManager.GetString("MessageBox_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The save game for {0} has been successfully deleted..
        /// </summary>
        public static string MessageBox_SuccessDeleteSaveGameText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessDeleteSaveGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Canary has been successfully installed..
        /// </summary>
        public static string MessageBox_SuccessInstallXeniaCanaryText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessInstallXeniaCanaryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Canary has been successfully uninstalled..
        /// </summary>
        public static string MessageBox_SuccessUninstallXeniaCanaryText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessUninstallXeniaCanaryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Canary has been successfully updated..
        /// </summary>
        public static string MessageBox_SuccessUpdateXeniaCanaryText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessUpdateXeniaCanaryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We couldn&apos;t find the selected game in the database.\nDo you want to add it with default artwork (Press &quot;Yes&quot;) or retry (Press &quot;No&quot;)?.
        /// </summary>
        public static string MessageBox_UnableFindSelectedGameText {
            get {
                return ResourceManager.GetString("MessageBox_UnableFindSelectedGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find the selected game.
        /// </summary>
        public static string MessageBox_UnableFindSelectedGameTitle {
            get {
                return ResourceManager.GetString("MessageBox_UnableFindSelectedGameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a game patch file.
        /// </summary>
        public static string OpenFileDialog_SelectGamePatchTitle {
            get {
                return ResourceManager.GetString("OpenFileDialog_SelectGamePatchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a game.
        /// </summary>
        public static string OpenFileDialog_SelectGameTitle {
            get {
                return ResourceManager.GetString("OpenFileDialog_SelectGameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search.
        /// </summary>
        public static string Searchbar_PlaceholderText {
            get {
                return ResourceManager.GetString("Searchbar_PlaceholderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic Save Backup.
        /// </summary>
        public static string SettingsPage_AutomaticSaveBackup {
            get {
                return ResourceManager.GetString("SettingsPage_AutomaticSaveBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option to automatically back up save files to the Backup folder next to Xenia Manager
        ///each time Xenia Manager is closed.
        /// </summary>
        public static string SettingsPage_AutomaticSaveBackupTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_AutomaticSaveBackupTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string SettingsPage_LanguageSelector {
            get {
                return ResourceManager.GetString("SettingsPage_LanguageSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Manager UI language.
        /// </summary>
        public static string SettingsPage_LanguageSelectorTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_LanguageSelectorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Slot.
        /// </summary>
        public static string SettingsPage_ProfileSlot {
            get {
                return ResourceManager.GetString("SettingsPage_ProfileSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the profile slot whose save files will be automatically backed up each time you exit Xenia.
        /// </summary>
        public static string SettingsPage_ProfileSlotTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_ProfileSlotTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme.
        /// </summary>
        public static string SettingsPage_ThemeSelector {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme which will be used by Xenia Manager.
        /// </summary>
        public static string SettingsPage_ThemeSelectorTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeSelectorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open &quot;Manage&quot; page to update these Xenia versions to new version:.
        /// </summary>
        public static string SnackbarPresenter_XeniaUpdateAvailableText {
            get {
                return ResourceManager.GetString("SnackbarPresenter_XeniaUpdateAvailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia has a new update.
        /// </summary>
        public static string SnackbarPresenter_XeniaUpdateAvailableTitle {
            get {
                return ResourceManager.GetString("SnackbarPresenter_XeniaUpdateAvailableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Queued Frames.
        /// </summary>
        public static string XeniaSettingsPage_AudioMaxQueuedFramesSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioMaxQueuedFramesSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows changing max buffered audio frames to reduce audio delay
        ///NOTE: Minimum is 4.
        /// </summary>
        public static string XeniaSettingsPage_AudioMaxQueuedFramesSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioMaxQueuedFramesSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mute.
        /// </summary>
        public static string XeniaSettingsPage_AudioMuteSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioMuteSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mutes all audio output.
        /// </summary>
        public static string XeniaSettingsPage_AudioMuteSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioMuteSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio.
        /// </summary>
        public static string XeniaSettingsPage_AudioSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio System.
        /// </summary>
        public static string XeniaSettingsPage_AudioSystemSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioSystemSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio System.
        /// </summary>
        public static string XeniaSettingsPage_AudioSystemSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioSystemSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dedicated XMA Thread.
        /// </summary>
        public static string XeniaSettingsPage_AudioUseDedicatedXmaThreadSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioUseDedicatedXmaThreadSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables XMA decoding on separate thread
        ///With this option disabled, expect better results, but lower performance.
        /// </summary>
        public static string XeniaSettingsPage_AudioUseDedicatedXmaThreadSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioUseDedicatedXmaThreadSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XMA Audio Decoder
        ///(Experimental).
        /// </summary>
        public static string XeniaSettingsPage_AudioXmaDecoderSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmaDecoderSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables the usage of new XMA audio decoder.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmaDecoderSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmaDecoderSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XMP.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmpSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmpSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables Music Player playback
        ///This can fix music in some games.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmpSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmpSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XMP Default Volume.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmpVolumeSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmpVolumeSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default music volume if game doesn&apos;t set it.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmpVolumeSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmpVolumeSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Display Resolution Height.
        /// </summary>
        public static string XeniaSettingsPage_DisplayCustomInternalResolutionHeightSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayCustomInternalResolutionHeightSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported: 1-1080.
        /// </summary>
        public static string XeniaSettingsPage_DisplayCustomInternalResolutionHeightSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayCustomInternalResolutionHeightSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Display Resolution Width.
        /// </summary>
        public static string XeniaSettingsPage_DisplayCustomInternalResolutionWidthSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayCustomInternalResolutionWidthSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported: 1-1920.
        /// </summary>
        public static string XeniaSettingsPage_DisplayCustomInternalResolutionWidthSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayCustomInternalResolutionWidthSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framerate Limit.
        /// </summary>
        public static string XeniaSettingsPage_DisplayFramerateLimitSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayFramerateLimitSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum frames per second
        ///Defaults to 60 when set to 0 and VSYNC is enabled
        ///0 = Unlimited Frames.
        /// </summary>
        public static string XeniaSettingsPage_DisplayFramerateLimitSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayFramerateLimitSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fullscreen.
        /// </summary>
        public static string XeniaSettingsPage_DisplayFullscreenSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayFullscreenSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the emulator in fullscreen when enabled.
        /// </summary>
        public static string XeniaSettingsPage_DisplayFullscreenSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayFullscreenSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Display Resolution.
        /// </summary>
        public static string XeniaSettingsPage_DisplayInternalResolutionSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayInternalResolutionSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the game that support different resolutions to be rendered in specific resolution
        ///NOTE: The game has to actually support the resolution for this to work. 1280x720 will work in pretty much every game..
        /// </summary>
        public static string XeniaSettingsPage_DisplayInternalResolutionSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayInternalResolutionSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Letterbox.
        /// </summary>
        public static string XeniaSettingsPage_DisplayLetterboxSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayLetterboxSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables Black Bars
        ///(Letterboxing/Pillarboxing).
        /// </summary>
        public static string XeniaSettingsPage_DisplayLetterboxSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayLetterboxSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query Occlusion Fake Sample Count
        ///(Lower Threshold).
        /// </summary>
        public static string XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountLowerSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountLowerSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to -1 no sample counts are written, games may hang
        ///Else, the sample count of every tile will be incremented on every EVENT_WRITE_ZPD by this number
        ///Setting this to 0 means everything is reported as occluded.
        /// </summary>
        public static string XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountLowerSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountLowerSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query Occlusion Fake Sample Count
        ///(Upper Threshold).
        /// </summary>
        public static string XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountUpperSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountUpperSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to higher number than query_occlusion_sample_lower_threshold
        ///This value is ignored if query_occlusion_sample_lower_threshold is set to -1.
        /// </summary>
        public static string XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountUpperSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountUpperSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display.
        /// </summary>
        public static string XeniaSettingsPage_DisplaySettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplaySettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical Sync.
        /// </summary>
        public static string XeniaSettingsPage_DisplayVSyncSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayVSyncSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables Vertical Sync.
        /// </summary>
        public static string XeniaSettingsPage_DisplayVSyncSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayVSyncSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Widescreen.
        /// </summary>
        public static string XeniaSettingsPage_DisplayWidescreenSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayWidescreenSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles between 16:9 and 4:3 aspect ratio
        ///NOTE: Resolutions below 1280x720 run at 4:3 aspect ratio.
        /// </summary>
        public static string XeniaSettingsPage_DisplayWidescreenSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayWidescreenSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Plugins.
        /// </summary>
        public static string XeniaSettingsPage_GeneralAllowPluginsSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralAllowPluginsSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows loading of plugins/trainers from plugins\title_id\plugin.xex
        ///Plugin are homebrew xex modules which can be used for making mods
        ///NOTE: This feature is experimental.
        /// </summary>
        public static string XeniaSettingsPage_GeneralAllowPluginsSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralAllowPluginsSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Patches.
        /// </summary>
        public static string XeniaSettingsPage_GeneralApplyPatchesSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralApplyPatchesSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables custom patching functionality
        ///If disabled, game patches like 60FPS patch won&apos;t work.
        /// </summary>
        public static string XeniaSettingsPage_GeneralApplyPatchesSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralApplyPatchesSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title Updates.
        /// </summary>
        public static string XeniaSettingsPage_GeneralApplyTitleUpdatesSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralApplyTitleUpdatesSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables applying title updates.
        /// </summary>
        public static string XeniaSettingsPage_GeneralApplyTitleUpdatesSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralApplyTitleUpdatesSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord Rich Presence.
        /// </summary>
        public static string XeniaSettingsPage_GeneralDiscordSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralDiscordSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show your activity on Discord.
        /// </summary>
        public static string XeniaSettingsPage_GeneralDiscordSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralDiscordSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Mask.
        /// </summary>
        public static string XeniaSettingsPage_GeneralLicenseMaskSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralLicenseMaskSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - No License
        ///- First License (Generally the full version license in Xbox Live Arcade titles)
        ///- All Licenses (All possible licenses enabled, but it could lead to some undefined behavior).
        /// </summary>
        public static string XeniaSettingsPage_GeneralLicenseMaskSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralLicenseMaskSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string XeniaSettingsPage_GeneralSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Achievement Notifications.
        /// </summary>
        public static string XeniaSettingsPage_GeneralShowAchievementNotificationSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralShowAchievementNotificationSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show achievement notification on screen.
        /// </summary>
        public static string XeniaSettingsPage_GeneralShowAchievementNotificationSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralShowAchievementNotificationSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Country.
        /// </summary>
        public static string XeniaSettingsPage_GeneralUserCountrySettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralUserCountrySettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used for changing country (Games can use this to change their language).
        /// </summary>
        public static string XeniaSettingsPage_GeneralUserCountrySettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralUserCountrySettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Language.
        /// </summary>
        public static string XeniaSettingsPage_GeneralUserLanguageSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralUserLanguageSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used for changing language in games (If they support it).
        /// </summary>
        public static string XeniaSettingsPage_GeneralUserLanguageSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralUserLanguageSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graphics.
        /// </summary>
        public static string XeniaSettingsPage_GraphicalSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicalSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Invalid Fetch Constants.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsAllowInvalidFetchConstantsSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsAllowInvalidFetchConstantsSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow texture and vertex fetch constants with invalid type
        ///Generally unsafe because the constant may contain completely invalid values,
        ///but may be used to bypass fetch constant type errors in certain games 
        ///until the real reason why they&apos;re invalid is found.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsAllowInvalidFetchConstantsSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsAllowInvalidFetchConstantsSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-Aliasing.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsAntiAliasingSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsAntiAliasingSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post-processing anti-aliasing effect to apply to the image output of the game
        ///Heavily recommended when AMD FidelityFX Contrast Adaptive Sharpening or Super Resolution 1.0 is active
        ///- FXAA (NVIDIA Fast Approximate Anti-Aliasing 3.11, normal quality preset)
        ///- FXAA Extreme (NVIDIA Fast Approximate Anti-Aliasing 3.11, extreme quality preset).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsAntiAliasingSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsAntiAliasingSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAS Additional Sharpness.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsCASAdditionalSharpnessSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsCASAdditionalSharpnessSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional sharpness for AMD FidelityFX Contrast Adaptive Sharpening (CAS)
        ///(Higher is sharper).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsCASAdditionalSharpnessSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsCASAdditionalSharpnessSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Priority
        ///(Direct3D 12).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12QueuePrioritySettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12QueuePrioritySettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Normal
        ///- High (Default, recommended for speed)
        ///- Global Realtime (Requires running Xenia/Xenia Manager as Administrator).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12QueuePrioritySettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12QueuePrioritySettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Render Target Path
        ///(Direct3D 12).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12RenderTargetPathSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12RenderTargetPathSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RTV (Recommended for speed)
        ///ROV aka Rasterized-Ordered Views (For higher accuracy in some cases if available).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12RenderTargetPathSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12RenderTargetPathSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable Refresh Rate
        ///(Direct3D 12).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12VRRSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12VRRSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen tearing and Variable Refresh Rate.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12VRRSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12VRRSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw Resolution Scale.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsDrawResolutionScaleSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsDrawResolutionScaleSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integer pixel width scale used for scaling the rendering resolution opaquely to the game
        ///1, 2 and 3 are supported, though in the documentation, this value can go to 7 (8960x5040)
        ///If set to 2, render resolution goes from 720p to 1440p, if set to 3 to 4k...
        ///NOTE: Various effects and parts of game rendering pipelines may work incorrectly.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsDrawResolutionScaleSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsDrawResolutionScaleSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FSR Max Upsampling Passes.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsFSRMaxUpsamlingPassesSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsFSRMaxUpsamlingPassesSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of upsampling passes performed in AMD FidelityFX Super Resolution 1.0 (FSR) before falling back to bilinear stretching after the final pass
        /// Each pass upscales only to up to 2x2 the previous size
        ///If the game outputs a 1280x720 image, 1 pass will upscale it to up to 2560x1440 (below 4K), 
        ///after 2 passes it will be upscaled to a maximum of 5120x2880 (including 3840x2160 for 4K)...
        ///This variable has no effect if the display resolution isn&apos;t very high, 
        ///but may be reduced on resolutions like [rest of string was truncated]&quot;;.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsFSRMaxUpsamlingPassesSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsFSRMaxUpsamlingPassesSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FSR Sharpness Reduction.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsFSRSharpnessReductionSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsFSRSharpnessReductionSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sharpness reduction for AMD FidelityFX Super Resolution 1.0 (FSR), in stops
        ///(Lower is sharper).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsFSRSharpnessReductionSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsFSRSharpnessReductionSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gamma Render Target as sRGB.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsGammaRenderTargetAsSRgbSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsGammaRenderTargetAsSRgbSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the host can&apos;t write piecewise linear gamma directly with correct blending,
        ///use sRGB output on the host for conceptually correct blending in linear color space
        ///while having slightly different precision distribution in the render target 
        ///and severely incorrect values if the game accesses the resulting colors directly as raw data.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsGammaRenderTargetAsSRgbSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsGammaRenderTargetAsSRgbSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graphics API.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsGpuApiSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsGpuApiSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post Process Dither.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsPostProcessDitherSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsPostProcessDitherSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dither the final image output from the internal precision to 8 bits per channel so gradients are smoother
        ///On a 10bpc display, the lower 2 bits will still be kept, but noise will be added to them
        ///Disabling may be recommended for 10bpc, but it depends on the 10bpc displaying capabilities of the actual display used.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsPostProcessDitherSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsPostProcessDitherSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Readback Resolve.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsReadbackResolveSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsReadbackResolveSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read render-to-texture results on the CPU
        ///This may be needed in some games, 
        ///but causes mid-frame synchronization, so it has a huge performance impact.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsReadbackResolveSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsReadbackResolveSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaling &amp; Sharpening.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsScalingSharpeningSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsScalingSharpeningSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post-processing effect to use for resampling and/or sharpening of the final display output
        ///- Bilinear (Original image at 1:1, simple bilinear stretching for resampling)
        ///- FidelityFX CAS (Use AMD FidelityFX Contrast Adaptive Sharpening (CAS) for sharpening at scaling factors of up to 2x2, with additional bilinear stretching for larger factors)
        ///- AMD FSR (Use AMD FidelityFX Super Resolution 1.0 (FSR) for highest-quality upscaling, or AMD FidelityFX Contrast Adaptive Sharpening for sharpening while not scal [rest of string was truncated]&quot;;.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsScalingSharpeningSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsScalingSharpeningSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fuzzy Alpha Epsilon.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsUseFuzzyAlphaEpsilonSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsUseFuzzyAlphaEpsilonSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use approximate compare for alpha values to prevent flickering on NVIDIA graphics cards.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsUseFuzzyAlphaEpsilonSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsUseFuzzyAlphaEpsilonSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Present Mode FIFO Relaxed
        ///(Vulkan).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeFifoRelaxedSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeFifoRelaxedSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lowest priority present mode
        ///Allows the relaxed first-in first-out presentation mode, 
        ///which causes waiting for host display vertical sync, 
        ///but may present with tearing if frames don&apos;t meet the host display refresh rate.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeFifoRelaxedSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeFifoRelaxedSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Present Mode Intermediate
        ///(Vulkan).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeIntermediateSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeIntermediateSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highest priority present mode
        ///Allows the immediate presentation mode, 
        ///offering the lowest latency with the possibility of screen tearing in certain cases and variable refresh rate
        ///NOTE: If this doesn&apos;t work, try the other 2 present modes.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeIntermediateSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeIntermediateSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Present Mode Mailbox
        ///(Vulkan).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeMailboxSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeMailboxSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Middle priority present mode
        ///Allows the mailbox presentation mode (2nd priority), 
        ///offering low latency without the possibility of tearing
        ///NOTE: If this doesn&apos;t work, try FIFO Relaxed present mode.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeMailboxSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeMailboxSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Render Target Path
        ///(Vulkan).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanRenderTargetPathSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanRenderTargetPathSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - FBO (Recommended for speed)
        ///- FSI (For higher accuracy in some cases if available).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanRenderTargetPathSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanRenderTargetPathSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Break On Unimplemented Instructions.
        /// </summary>
        public static string XeniaSettingsPage_HacksBreakOnUnimplementedInstructionsSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksBreakOnUnimplementedInstructionsSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Break to the host debugger (or crash if no debugger attached) if an unimplemented PowerPC instruction is encountered
        ///- On (default)
        ///- Off (hack, needed for certain games).
        /// </summary>
        public static string XeniaSettingsPage_HacksBreakOnUnimplementedInstructionsSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksBreakOnUnimplementedInstructionsSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear GPU Cache.
        /// </summary>
        public static string XeniaSettingsPage_HacksClearGpuCacheSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksClearGpuCacheSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh the state of memory pages to enable gpu written data
        ///- On (worsens performance, but can help reduce visual anomalies like polygon explosions or corrupted textures)
        ///- Off (default).
        /// </summary>
        public static string XeniaSettingsPage_HacksClearGpuCacheSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksClearGpuCacheSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command Line (cl).
        /// </summary>
        public static string XeniaSettingsPage_HacksCommandLineSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksCommandLineSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify additional command-line provided to guest.
        /// </summary>
        public static string XeniaSettingsPage_HacksCommandLineSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksCommandLineSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Context Promotion.
        /// </summary>
        public static string XeniaSettingsPage_HacksDisableContextPromotionSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksDisableContextPromotionSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables Context Promotion optimizations
        ///This may be needed for some sports games, but will reduce performance.
        /// </summary>
        public static string XeniaSettingsPage_HacksDisableContextPromotionSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksDisableContextPromotionSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disassemble Functions.
        /// </summary>
        public static string XeniaSettingsPage_HacksDisassembleFunctionsSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksDisassembleFunctionsSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disassemble functions during generation
        ///This can be used as an alternative to Readback Resolve in some games.
        /// </summary>
        public static string XeniaSettingsPage_HacksDisassembleFunctionsSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksDisassembleFunctionsSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hacks.
        /// </summary>
        public static string XeniaSettingsPage_HackSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HackSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect Zero Page.
        /// </summary>
        public static string XeniaSettingsPage_HacksProtectZeroSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksProtectZeroSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect the zero page from reads and writes
        ///- On (default)
        ///- Off (hack, needed for certain games).
        /// </summary>
        public static string XeniaSettingsPage_HacksProtectZeroSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksProtectZeroSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scribble Heap.
        /// </summary>
        public static string XeniaSettingsPage_HacksScribbleHeapSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksScribbleHeapSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scribble 0xCD into all allocated heap memory
        ///This can be used as an alternative to Readback Resolve in some games.
        /// </summary>
        public static string XeniaSettingsPage_HacksScribbleHeapSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksScribbleHeapSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mount Cache.
        /// </summary>
        public static string XeniaSettingsPage_StorageMountCacheSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageMountCacheSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable cache mount
        ///Can fix some games.
        /// </summary>
        public static string XeniaSettingsPage_StorageMountCacheSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageMountCacheSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mount Scratch.
        /// </summary>
        public static string XeniaSettingsPage_StorageMountScratchSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageMountScratchSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable scratch mount.
        /// </summary>
        public static string XeniaSettingsPage_StorageMountScratchSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageMountScratchSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage.
        /// </summary>
        public static string XeniaSettingsPage_StorageSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller Hotkeys.
        /// </summary>
        public static string XeniaSettingsPage_UserInputControllerHotkeysSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputControllerHotkeysSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotkeys for Xbox and PS controllers
        ///NOTE: Can interfere with the gameplay.
        /// </summary>
        public static string XeniaSettingsPage_UserInputControllerHotkeysSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputControllerHotkeysSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller Vibration.
        /// </summary>
        public static string XeniaSettingsPage_UserInputControllerVibrationSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputControllerVibrationSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle controller vibration.
        /// </summary>
        public static string XeniaSettingsPage_UserInputControllerVibrationSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputControllerVibrationSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input System.
        /// </summary>
        public static string XeniaSettingsPage_UserInputHidSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputHidSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Any (default)
        ///- SDL2 (needed for non-XInput controllers)
        ///- XInput (XInput controllers)
        ///- Winkey (keyboard).
        /// </summary>
        public static string XeniaSettingsPage_UserInputHidSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputHidSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard Mode.
        /// </summary>
        public static string XeniaSettingsPage_UserInputKeyboardModeSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputKeyboardModeSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Disabled
        ///- Enabled
        ///- Passthrough (Requires controller being connected).
        /// </summary>
        public static string XeniaSettingsPage_UserInputKeyboardModeSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputKeyboardModeSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard User Index.
        /// </summary>
        public static string XeniaSettingsPage_UserInputKeyboardUserIndexSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputKeyboardUserIndexSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller port that keyboard emulates.
        /// </summary>
        public static string XeniaSettingsPage_UserInputKeyboardUserIndexSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputKeyboardUserIndexSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left Stick Deadzone.
        /// </summary>
        public static string XeniaSettingsPage_UserInputLeftStickDeadzoneSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputLeftStickDeadzoneSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines deadzone level for the left stick.
        /// </summary>
        public static string XeniaSettingsPage_UserInputLeftStickDeadzoneSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputLeftStickDeadzoneSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right Stick Deadzone.
        /// </summary>
        public static string XeniaSettingsPage_UserInputRightStickDeadzoneSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputRightStickDeadzoneSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines deadzone level for the right stick.
        /// </summary>
        public static string XeniaSettingsPage_UserInputRightStickDeadzoneSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputRightStickDeadzoneSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Input.
        /// </summary>
        public static string XeniaSettingsPage_UserInputSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputSettingsTitleText", resourceCulture);
            }
        }
    }
}
