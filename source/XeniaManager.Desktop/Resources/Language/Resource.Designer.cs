//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace XeniaManager.Desktop.Resources.Language {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("XeniaManager.Desktop.Resources.Language.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A comprehensive management tool for Xenia Emulator. Easily install, update, and manage different versions of Xenia emulator with an intuitive interface..
        /// </summary>
        public static string AboutPage_AppDescription {
            get {
                return ResourceManager.GetString("AboutPage_AppDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check For Updates.
        /// </summary>
        public static string AboutPage_CheckForUpdatesButtonText {
            get {
                return ResourceManager.GetString("AboutPage_CheckForUpdatesButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This application is not affiliated with, endorsed by, or sponsored by Microsoft Corporation or the Xenia Project in any way. All trademarks, logos, and brand names are the property of their respective owners.
        ///Xbox 360 is a registered trademark of Microsoft Corporation in the United States and/or other countries.
        ///Xenia is a registered trademark of the Xenia Project.
        ///Any references to these or other trademarks are made solely for the purpose of identifying compatibility or functionality and do not imply an [rest of string was truncated]&quot;;.
        /// </summary>
        public static string AboutPage_FooterNoteText {
            get {
                return ResourceManager.GetString("AboutPage_FooterNoteText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GitHub.
        /// </summary>
        public static string AboutPage_GithubButtonText {
            get {
                return ResourceManager.GetString("AboutPage_GithubButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens Xenia Manager&apos;s Github Repository.
        /// </summary>
        public static string AboutPage_GithubButtonTooltip {
            get {
                return ResourceManager.GetString("AboutPage_GithubButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Libraries.
        /// </summary>
        public static string AboutPage_LibrariesHeader {
            get {
                return ResourceManager.GetString("AboutPage_LibrariesHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Legal information and acknowledgments.
        /// </summary>
        public static string AboutPage_LicenseCreditsSideText {
            get {
                return ResourceManager.GetString("AboutPage_LicenseCreditsSideText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License &amp; Credits.
        /// </summary>
        public static string AboutPage_LicenseCreditsText {
            get {
                return ResourceManager.GetString("AboutPage_LicenseCreditsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This software is licensed under the BSD-3-Clause License..
        /// </summary>
        public static string AboutPage_LicenseText {
            get {
                return ResourceManager.GetString("AboutPage_LicenseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Magick.NET.
        /// </summary>
        public static string AboutPage_MagickNetTitle {
            get {
                return ResourceManager.GetString("AboutPage_MagickNetTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Image processing and manipulation.
        /// </summary>
        public static string AboutPage_MagickNetTooltip {
            get {
                return ResourceManager.GetString("AboutPage_MagickNetTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NvAPIWrapper.
        /// </summary>
        public static string AboutPage_NvApiWrapperTitle {
            get {
                return ResourceManager.GetString("AboutPage_NvApiWrapperTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - NVIDIA GPU Driver Display configuration.
        /// </summary>
        public static string AboutPage_NvApiWrapperTooltip {
            get {
                return ResourceManager.GetString("AboutPage_NvApiWrapperTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Serilog.
        /// </summary>
        public static string AboutPage_SerilogTitle {
            get {
                return ResourceManager.GetString("AboutPage_SerilogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Structured logging framework.
        /// </summary>
        public static string AboutPage_SerilogTooltip {
            get {
                return ResourceManager.GetString("AboutPage_SerilogTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SteamKit2.
        /// </summary>
        public static string AboutPage_SteamKit2Title {
            get {
                return ResourceManager.GetString("AboutPage_SteamKit2Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Steam Network integration.
        /// </summary>
        public static string AboutPage_SteamKit2Tooltip {
            get {
                return ResourceManager.GetString("AboutPage_SteamKit2Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tomlyn.
        /// </summary>
        public static string AboutPage_TomlynTitle {
            get {
                return ResourceManager.GetString("AboutPage_TomlynTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - TOML configuration file parser.
        /// </summary>
        public static string AboutPage_TomlynTooltip {
            get {
                return ResourceManager.GetString("AboutPage_TomlynTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update Xenia Manager.
        /// </summary>
        public static string AboutPage_UpdateXeniaManagerButtonText {
            get {
                return ResourceManager.GetString("AboutPage_UpdateXeniaManagerButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experimental.
        /// </summary>
        public static string AboutPage_UseExperimentalBuild {
            get {
                return ResourceManager.GetString("AboutPage_UseExperimentalBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable to receive experimental feature updates.
        /// </summary>
        public static string AboutPage_UseExperimentalBuildTooltip {
            get {
                return ResourceManager.GetString("AboutPage_UseExperimentalBuildTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Website.
        /// </summary>
        public static string AboutPage_WebsiteButtonText {
            get {
                return ResourceManager.GetString("AboutPage_WebsiteButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens Xenia Manager&apos;s website.
        /// </summary>
        public static string AboutPage_WebsiteButtonTooltip {
            get {
                return ResourceManager.GetString("AboutPage_WebsiteButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WPF UI.
        /// </summary>
        public static string AboutPage_WpfUiTitle {
            get {
                return ResourceManager.GetString("AboutPage_WpfUiTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Modern WPF controls and theming.
        /// </summary>
        public static string AboutPage_WpfUiTooltip {
            get {
                return ResourceManager.GetString("AboutPage_WpfUiTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xbox 360 Emulation.
        /// </summary>
        public static string AboutPage_Xbox360EmulationHeader {
            get {
                return ResourceManager.GetString("AboutPage_Xbox360EmulationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xbox 360 Toolkit.
        /// </summary>
        public static string AboutPage_Xbox360ToolkitTitle {
            get {
                return ResourceManager.GetString("AboutPage_Xbox360ToolkitTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Game details parsing.
        /// </summary>
        public static string AboutPage_Xbox360ToolkitTooltip {
            get {
                return ResourceManager.GetString("AboutPage_Xbox360ToolkitTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Canary.
        /// </summary>
        public static string AboutPage_XeniaCanaryTitle {
            get {
                return ResourceManager.GetString("AboutPage_XeniaCanaryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Experimental build with latest features.
        /// </summary>
        public static string AboutPage_XeniaCanaryTooltip {
            get {
                return ResourceManager.GetString("AboutPage_XeniaCanaryTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Mousehook.
        /// </summary>
        public static string AboutPage_XeniaMousehookTitle {
            get {
                return ResourceManager.GetString("AboutPage_XeniaMousehookTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Keyboard &amp; Mouse support.
        /// </summary>
        public static string AboutPage_XeniaMousehookTooltip {
            get {
                return ResourceManager.GetString("AboutPage_XeniaMousehookTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Netplay.
        /// </summary>
        public static string AboutPage_XeniaNetplayTitle {
            get {
                return ResourceManager.GetString("AboutPage_XeniaNetplayTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Multiplayer gaming support.
        /// </summary>
        public static string AboutPage_XeniaNetplayTooltip {
            get {
                return ResourceManager.GetString("AboutPage_XeniaNetplayTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Project.
        /// </summary>
        public static string AboutPage_XeniaProjectTitle {
            get {
                return ResourceManager.GetString("AboutPage_XeniaProjectTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  - Original Xbox 360 emulator.
        /// </summary>
        public static string AboutPage_XeniaProjectTooltip {
            get {
                return ResourceManager.GetString("AboutPage_XeniaProjectTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gameplay.
        /// </summary>
        public static string CompatibilityRating_Gameplay {
            get {
                return ResourceManager.GetString("CompatibilityRating_Gameplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loads.
        /// </summary>
        public static string CompatibilityRating_Loads {
            get {
                return ResourceManager.GetString("CompatibilityRating_Loads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playable.
        /// </summary>
        public static string CompatibilityRating_Playable {
            get {
                return ResourceManager.GetString("CompatibilityRating_Playable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        public static string CompatibilityRating_Unknown {
            get {
                return ResourceManager.GetString("CompatibilityRating_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unplayable.
        /// </summary>
        public static string CompatibilityRating_Unplayable {
            get {
                return ResourceManager.GetString("CompatibilityRating_Unplayable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes the item selected in the TreeView.
        /// </summary>
        public static string ContentViewer_DeleteButtonTooltip {
            get {
                return ResourceManager.GetString("ContentViewer_DeleteButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete&apos;s the selected gamer profile.
        /// </summary>
        public static string ContentViewer_DeleteProfileButtonTooltip {
            get {
                return ResourceManager.GetString("ContentViewer_DeleteProfileButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit gamertag.
        /// </summary>
        public static string ContentViewer_EditProfileButtonTooltip {
            get {
                return ResourceManager.GetString("ContentViewer_EditProfileButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exports the save files into a zip folder.
        /// </summary>
        public static string ContentViewer_ExportSavesButtonTooltip {
            get {
                return ResourceManager.GetString("ContentViewer_ExportSavesButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imports the save game (Has to have specific folder structure, similar to game saves found on Xenia&apos;s game-saves repository).
        /// </summary>
        public static string ContentViewer_ImportSavesButtonTooltip {
            get {
                return ResourceManager.GetString("ContentViewer_ImportSavesButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the selected content folder in Windows Explorer.
        /// </summary>
        public static string ContentViewer_OpenFolderButtonTooltip {
            get {
                return ResourceManager.GetString("ContentViewer_OpenFolderButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Progress:.
        /// </summary>
        public static string DownloadProgress_Text {
            get {
                return ResourceManager.GetString("DownloadProgress_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compatibility Page.
        /// </summary>
        public static string GameDetailsEditor_CompatibilityPage {
            get {
                return ResourceManager.GetString("GameDetailsEditor_CompatibilityPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter URL to the game&apos;s compatibility page.
        /// </summary>
        public static string GameDetailsEditor_CompatibilityPagePlaceholderText {
            get {
                return ResourceManager.GetString("GameDetailsEditor_CompatibilityPagePlaceholderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compatibility Rating.
        /// </summary>
        public static string GameDetailsEditor_CompatibilityRating {
            get {
                return ResourceManager.GetString("GameDetailsEditor_CompatibilityRating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title.
        /// </summary>
        public static string GameDetailsEditor_GameTitle {
            get {
                return ResourceManager.GetString("GameDetailsEditor_GameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter game title.
        /// </summary>
        public static string GameDetailsEditor_GameTitlePlaceholderText {
            get {
                return ResourceManager.GetString("GameDetailsEditor_GameTitlePlaceholderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title ID and Media ID are automatically detected from the game file and cannot be modified..
        /// </summary>
        public static string GameDetailsEditor_InfobarAutomaticDetectionText {
            get {
                return ResourceManager.GetString("GameDetailsEditor_InfobarAutomaticDetectionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic Detection.
        /// </summary>
        public static string GameDetailsEditor_InfobarAutomaticDetectionTitle {
            get {
                return ResourceManager.GetString("GameDetailsEditor_InfobarAutomaticDetectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Media ID.
        /// </summary>
        public static string GameDetailsEditor_MediaId {
            get {
                return ResourceManager.GetString("GameDetailsEditor_MediaId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title ID.
        /// </summary>
        public static string GameDetailsEditor_TitleId {
            get {
                return ResourceManager.GetString("GameDetailsEditor_TitleId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You are currently on the latest version of Xenia Manager..
        /// </summary>
        public static string InfoBar_ManagerNoUpdatesAvailableText {
            get {
                return ResourceManager.GetString("InfoBar_ManagerNoUpdatesAvailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is a newer version of Xenia Manager..
        /// </summary>
        public static string InfoBar_ManagerUpdatesAvailableText {
            get {
                return ResourceManager.GetString("InfoBar_ManagerUpdatesAvailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Updates Available.
        /// </summary>
        public static string InfoBar_NoUpdatesAvailableTitle {
            get {
                return ResourceManager.GetString("InfoBar_NoUpdatesAvailableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates Available.
        /// </summary>
        public static string InfoBar_UpdatesAvailableTitle {
            get {
                return ResourceManager.GetString("InfoBar_UpdatesAvailableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Additional Patches.
        /// </summary>
        public static string LibraryGameButton_AddAdditionalPatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_AddAdditionalPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add additional patches to the existing patch file from another local file
        ///Useful if you have a patch file that is not in game-patches repository.
        /// </summary>
        public static string LibraryGameButton_AddAdditionalPatchesTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_AddAdditionalPatchesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change game path.
        /// </summary>
        public static string LibraryGameButton_ChangeGamePath {
            get {
                return ResourceManager.GetString("LibraryGameButton_ChangeGamePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the user to change the location of {0}
        ///Useful if the game has been moved to a different location.
        /// </summary>
        public static string LibraryGameButton_ChangeGamePathTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_ChangeGamePathTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Controls.
        /// </summary>
        public static string LibraryGameButton_ConfigureMousehookControls {
            get {
                return ResourceManager.GetString("LibraryGameButton_ConfigureMousehookControls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure key bindings used by {0} in Xenia Mousehook.
        /// </summary>
        public static string LibraryGameButton_ConfigureMousehookControlsTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_ConfigureMousehookControlsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configure Patches.
        /// </summary>
        public static string LibraryGameButton_ConfigurePatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_ConfigurePatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the user to enable/disable installed game patches.
        /// </summary>
        public static string LibraryGameButton_ConfigurePatchesTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_ConfigurePatchesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content.
        /// </summary>
        public static string LibraryGameButton_ContentMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_ContentMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Desktop.
        /// </summary>
        public static string LibraryGameButton_DesktopShortcut {
            get {
                return ResourceManager.GetString("LibraryGameButton_DesktopShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Patches.
        /// </summary>
        public static string LibraryGameButton_DownloadPatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_DownloadPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads and installs a patch file from the game patches repository.
        /// </summary>
        public static string LibraryGameButton_DownloadPatchesTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_DownloadPatchesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        public static string LibraryGameButton_EditGameDetails {
            get {
                return ResourceManager.GetString("LibraryGameButton_EditGameDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string LibraryGameButton_EditGameSettings {
            get {
                return ResourceManager.GetString("LibraryGameButton_EditGameSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Game.
        /// </summary>
        public static string LibraryGameButton_EditMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_EditMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screenshots.
        /// </summary>
        public static string LibraryGameButton_GameScreenshots {
            get {
                return ResourceManager.GetString("LibraryGameButton_GameScreenshots", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Content.
        /// </summary>
        public static string LibraryGameButton_InstallContent {
            get {
                return ResourceManager.GetString("LibraryGameButton_InstallContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Patches.
        /// </summary>
        public static string LibraryGameButton_InstallPatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_InstallPatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the user to install locally available patch file.
        /// </summary>
        public static string LibraryGameButton_InstallPatchesTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_InstallPatchesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulator &amp; Game Path.
        /// </summary>
        public static string LibraryGameButton_LocationMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_LocationMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open compatibility page.
        /// </summary>
        public static string LibraryGameButton_OpenCompatibilityPage {
            get {
                return ResourceManager.GetString("LibraryGameButton_OpenCompatibilityPage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Save Backup.
        /// </summary>
        public static string LibraryGameButton_OpenSaveBackup {
            get {
                return ResourceManager.GetString("LibraryGameButton_OpenSaveBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches.
        /// </summary>
        public static string LibraryGameButton_PatchesMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_PatchesMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} hours.
        /// </summary>
        public static string LibraryGameButton_PlaytimeHours {
            get {
                return ResourceManager.GetString("LibraryGameButton_PlaytimeHours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} minutes.
        /// </summary>
        public static string LibraryGameButton_PlaytimeMinutes {
            get {
                return ResourceManager.GetString("LibraryGameButton_PlaytimeMinutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Never Played.
        /// </summary>
        public static string LibraryGameButton_PlaytimeNeverPlayed {
            get {
                return ResourceManager.GetString("LibraryGameButton_PlaytimeNeverPlayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Time played:.
        /// </summary>
        public static string LibraryGameButton_PlaytimeTimePlayed {
            get {
                return ResourceManager.GetString("LibraryGameButton_PlaytimeTimePlayed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove from Xenia Manager.
        /// </summary>
        public static string LibraryGameButton_RemoveGameHeaderText {
            get {
                return ResourceManager.GetString("LibraryGameButton_RemoveGameHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deletes the game from Xenia Manager.
        /// </summary>
        public static string LibraryGameButton_RemoveGameHeaderTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_RemoveGameHeaderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Patches.
        /// </summary>
        public static string LibraryGameButton_RemovePatches {
            get {
                return ResourceManager.GetString("LibraryGameButton_RemovePatches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the user to remove the installed game patches.
        /// </summary>
        public static string LibraryGameButton_RemovePatchesTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_RemovePatchesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create Shortcut.
        /// </summary>
        public static string LibraryGameButton_ShortcutMenuText {
            get {
                return ResourceManager.GetString("LibraryGameButton_ShortcutMenuText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam.
        /// </summary>
        public static string LibraryGameButton_SteamShortcut {
            get {
                return ResourceManager.GetString("LibraryGameButton_SteamShortcut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will add a shortcut to every Steam account that is logged in on the users computer.
        /// </summary>
        public static string LibraryGameButton_SteamShortcutTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_SteamShortcutTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switch to Xenia {0}.
        /// </summary>
        public static string LibraryGameButton_SwitchToXeniaText {
            get {
                return ResourceManager.GetString("LibraryGameButton_SwitchToXeniaText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes the Xenia version used by the game to Xenia {0}.
        /// </summary>
        public static string LibraryGameButton_SwitchToXeniaTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_SwitchToXeniaTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View installed content.
        /// </summary>
        public static string LibraryGameButton_ViewInstalledContent {
            get {
                return ResourceManager.GetString("LibraryGameButton_ViewInstalledContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the user to see what&apos;s installed in {0} content folder and to export save files.
        /// </summary>
        public static string LibraryGameButton_ViewInstalledContentTooltip {
            get {
                return ResourceManager.GetString("LibraryGameButton_ViewInstalledContentTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Compatibility.
        /// </summary>
        public static string LibraryMenuItemShow_CompatibilityRating {
            get {
                return ResourceManager.GetString("LibraryMenuItemShow_CompatibilityRating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title.
        /// </summary>
        public static string LibraryMenuItemShow_GameTitle {
            get {
                return ResourceManager.GetString("LibraryMenuItemShow_GameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playtime.
        /// </summary>
        public static string LibraryMenuItemShow_Playtime {
            get {
                return ResourceManager.GetString("LibraryMenuItemShow_Playtime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens file dialog where user selects the game to be added into Xenia Manager.
        /// </summary>
        public static string LibraryPage_AddGameTooltip {
            get {
                return ResourceManager.GetString("LibraryPage_AddGameTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show/Hide game&apos;s compatibility rating on box art.
        /// </summary>
        public static string LibraryPage_DisplayGameCompatibilityRatingTooltip {
            get {
                return ResourceManager.GetString("LibraryPage_DisplayGameCompatibilityRatingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show/Hide game title on game&apos;s box art.
        /// </summary>
        public static string LibraryPage_DisplayGameTitleTooltip {
            get {
                return ResourceManager.GetString("LibraryPage_DisplayGameTitleTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show/Hide things like game title or compatibility rating on box arts.
        /// </summary>
        public static string LibraryPage_DisplayHideOptionsTooltip {
            get {
                return ResourceManager.GetString("LibraryPage_DisplayHideOptionsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes between Grid and List view for Library.
        /// </summary>
        public static string LibraryPage_LibraryViewChangerTooltip {
            get {
                return ResourceManager.GetString("LibraryPage_LibraryViewChangerTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scans the selected directory for games
        ///Check Wiki for more info on how to use this.
        /// </summary>
        public static string LibraryPage_ScanDirectoryTooltip {
            get {
                return ResourceManager.GetString("LibraryPage_ScanDirectoryTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string MainWindow_About {
            get {
                return ResourceManager.GetString("MainWindow_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows information about Xenia Manager.
        /// </summary>
        public static string MainWindow_AboutTooltip {
            get {
                return ResourceManager.GetString("MainWindow_AboutTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Library.
        /// </summary>
        public static string MainWindow_GameLibrary {
            get {
                return ResourceManager.GetString("MainWindow_GameLibrary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open your game library.
        /// </summary>
        public static string MainWindow_GameLibraryTooltip {
            get {
                return ResourceManager.GetString("MainWindow_GameLibraryTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage.
        /// </summary>
        public static string MainWindow_Manage {
            get {
                return ResourceManager.GetString("MainWindow_Manage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manage your installed Xenia.
        /// </summary>
        public static string MainWindow_ManageTooltip {
            get {
                return ResourceManager.GetString("MainWindow_ManageTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Xenia.
        /// </summary>
        public static string MainWindow_OpenXenia {
            get {
                return ResourceManager.GetString("MainWindow_OpenXenia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Launch Xenia standalone.
        /// </summary>
        public static string MainWindow_OpenXeniaTooltip {
            get {
                return ResourceManager.GetString("MainWindow_OpenXeniaTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string MainWindow_Settings {
            get {
                return ResourceManager.GetString("MainWindow_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens Xenia Manager settings.
        /// </summary>
        public static string MainWindow_SettingsTooltip {
            get {
                return ResourceManager.GetString("MainWindow_SettingsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings (Xenia).
        /// </summary>
        public static string MainWindow_XeniaSettings {
            get {
                return ResourceManager.GetString("MainWindow_XeniaSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens Xenia settings.
        /// </summary>
        public static string MainWindow_XeniaSettingsTooltip {
            get {
                return ResourceManager.GetString("MainWindow_XeniaSettingsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Build Channel.
        /// </summary>
        public static string ManagePage_BuildChannel {
            get {
                return ResourceManager.GetString("ManagePage_BuildChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable nightly builds for latest features and fixes.
        /// </summary>
        public static string ManagePage_BuildChannelTooltip {
            get {
                return ResourceManager.GetString("ManagePage_BuildChannelTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration.
        /// </summary>
        public static string ManagePage_ConfigurationHeaderText {
            get {
                return ResourceManager.GetString("ManagePage_ConfigurationHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Customize emulator behavior and file organization.
        /// </summary>
        public static string ManagePage_ConfigurationHeaderTooltip {
            get {
                return ResourceManager.GetString("ManagePage_ConfigurationHeaderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Emulator Management.
        /// </summary>
        public static string ManagePage_EmulatorManagementHeaderText {
            get {
                return ResourceManager.GetString("ManagePage_EmulatorManagementHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install and manage different Xenia emulator versions.
        /// </summary>
        public static string ManagePage_EmulatorManagementHeaderTooltip {
            get {
                return ResourceManager.GetString("ManagePage_EmulatorManagementHeaderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Export Log File.
        /// </summary>
        public static string ManagePage_ExportLogFile {
            get {
                return ResourceManager.GetString("ManagePage_ExportLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the user to export Xenia logs to desktop
        ///Useful if the user is experiencing crashes and wants to ask for help over on Xenia&apos;s Discord Server.
        /// </summary>
        public static string ManagePage_ExportLogFileTooltip {
            get {
                return ResourceManager.GetString("ManagePage_ExportLogFileTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string ManagePage_Install {
            get {
                return ResourceManager.GetString("ManagePage_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redownload Mousehook Bindings.
        /// </summary>
        public static string ManagePage_RedownloadMousehookBindings {
            get {
                return ResourceManager.GetString("ManagePage_RedownloadMousehookBindings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redownloads Xenia Mousehook Bindings.
        ///Useful if bindings got corrupted..
        /// </summary>
        public static string ManagePage_RedownloadMousehookBindingsTooltip {
            get {
                return ResourceManager.GetString("ManagePage_RedownloadMousehookBindingsTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redownload Xenia.
        /// </summary>
        public static string ManagePage_RedownloadXenia {
            get {
                return ResourceManager.GetString("ManagePage_RedownloadXenia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redownloads Xenia
        ///Useful is something is not working.
        /// </summary>
        public static string ManagePage_RedownloadXeniaTooltip {
            get {
                return ResourceManager.GetString("ManagePage_RedownloadXeniaTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tools and Utilities.
        /// </summary>
        public static string ManagePage_ToolsUtilitiesHeaderText {
            get {
                return ResourceManager.GetString("ManagePage_ToolsUtilitiesHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional tools and maintenance options.
        /// </summary>
        public static string ManagePage_ToolsUtilitiesHeaderTooltip {
            get {
                return ResourceManager.GetString("ManagePage_ToolsUtilitiesHeaderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unified content folder.
        /// </summary>
        public static string ManagePage_UnifiedContentFolder {
            get {
                return ResourceManager.GetString("ManagePage_UnifiedContentFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Makes all Xenia versions have same content folder
        ///NOTE: This requires Xenia Manager to be run as Administrator while installing Xenia.
        /// </summary>
        public static string ManagePage_UnifiedContentFolderTooltip {
            get {
                return ResourceManager.GetString("ManagePage_UnifiedContentFolderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string ManagePage_Uninstall {
            get {
                return ResourceManager.GetString("ManagePage_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update.
        /// </summary>
        public static string ManagePage_Update {
            get {
                return ResourceManager.GetString("ManagePage_Update", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update SDL Database.
        /// </summary>
        public static string ManagePage_UpdateGameControllerDatabase {
            get {
                return ResourceManager.GetString("ManagePage_UpdateGameControllerDatabase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates the SDL Game Controller Database used by Xenia.
        /// </summary>
        public static string ManagePage_UpdateGameControllerDatabaseTooltip {
            get {
                return ResourceManager.GetString("ManagePage_UpdateGameControllerDatabaseTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Installed.
        /// </summary>
        public static string ManagePage_XeniaNotInstalled {
            get {
                return ResourceManager.GetString("ManagePage_XeniaNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to add the game with default box art?
        ///Press &apos;Yes&apos; to proceed, or &apos;No&apos; to cancel..
        /// </summary>
        public static string MessageBox_AddGameWithDefaultArtworkText {
            get {
                return ResourceManager.GetString("MessageBox_AddGameWithDefaultArtworkText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches added.
        /// </summary>
        public static string MessageBox_AdditionalPatchesTitle {
            get {
                return ResourceManager.GetString("MessageBox_AdditionalPatchesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}\nAdditional patches have been added for {1}..
        /// </summary>
        public static string MessageBox_AdditionalPatchesTooltip {
            get {
                return ResourceManager.GetString("MessageBox_AdditionalPatchesTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature requires Administrative Rights to be enabled.
        ///Please run Xenia Manager as Administrator to use the feature..
        /// </summary>
        public static string MessageBox_AdministratorRequiredText {
            get {
                return ResourceManager.GetString("MessageBox_AdministratorRequiredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm exit.
        /// </summary>
        public static string MessageBox_ConfirmExit {
            get {
                return ResourceManager.GetString("MessageBox_ConfirmExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to delete the selected content for {0}?.
        /// </summary>
        public static string MessageBox_DeleteGameContentText {
            get {
                return ResourceManager.GetString("MessageBox_DeleteGameContentText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete game content.
        /// </summary>
        public static string MessageBox_DeleteGameContentTitle {
            get {
                return ResourceManager.GetString("MessageBox_DeleteGameContentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to delete currently selected gamer profile ({0})?.
        /// </summary>
        public static string MessageBox_DeleteGamerProfileText {
            get {
                return ResourceManager.GetString("MessageBox_DeleteGamerProfileText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Xenia Gamer Profile.
        /// </summary>
        public static string MessageBox_DeleteGamerProfileTitle {
            get {
                return ResourceManager.GetString("MessageBox_DeleteGamerProfileTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to delete the save file for {0}?.
        /// </summary>
        public static string MessageBox_DeleteSaveGameText {
            get {
                return ResourceManager.GetString("MessageBox_DeleteSaveGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete save game.
        /// </summary>
        public static string MessageBox_DeleteSaveGameTitle {
            get {
                return ResourceManager.GetString("MessageBox_DeleteSaveGameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to uninstall Xenia {0}?
        ///This will remove all save files and updates alongside the emulator..
        /// </summary>
        public static string MessageBox_DeleteXeniaText {
            get {
                return ResourceManager.GetString("MessageBox_DeleteXeniaText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall Xenia {0}.
        /// </summary>
        public static string MessageBox_DeleteXeniaTitle {
            get {
                return ResourceManager.GetString("MessageBox_DeleteXeniaTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate.
        /// </summary>
        public static string MessageBox_Duplicate {
            get {
                return ResourceManager.GetString("MessageBox_Duplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binding &apos;{0}&apos; is already assigned to &apos;{1}&apos;..
        /// </summary>
        public static string MessageBox_DuplicateBinding {
            get {
                return ResourceManager.GetString("MessageBox_DuplicateBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This title is already taken by another game. Please change it..
        /// </summary>
        public static string MessageBox_DuplicateTitle {
            get {
                return ResourceManager.GetString("MessageBox_DuplicateTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string MessageBox_Error {
            get {
                return ResourceManager.GetString("MessageBox_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You haven&apos;t selected a game..
        /// </summary>
        public static string MessageBox_GameNotSelected {
            get {
                return ResourceManager.GetString("MessageBox_GameNotSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No game has been selected..
        /// </summary>
        public static string MessageBox_GameNotSelectedErrorText {
            get {
                return ResourceManager.GetString("MessageBox_GameNotSelectedErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input Required.
        /// </summary>
        public static string MessageBox_InputRequired {
            get {
                return ResourceManager.GetString("MessageBox_InputRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press a key or mouse button to bind to &apos;{0}&apos; after closing this window..
        /// </summary>
        public static string MessageBox_InputRequiredText {
            get {
                return ResourceManager.GetString("MessageBox_InputRequiredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please install a version of Xenia to access this..
        /// </summary>
        public static string MessageBox_InstallXeniaToAccess {
            get {
                return ResourceManager.GetString("MessageBox_InstallXeniaToAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Input ({0}).
        /// </summary>
        public static string MessageBox_InvalidInput {
            get {
                return ResourceManager.GetString("MessageBox_InvalidInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio Max Queued Frames must be a number between 4 and 64.\nSetting the default value of 8..
        /// </summary>
        public static string MessageBox_InvalidInputAudioMaxQueuedFrames {
            get {
                return ResourceManager.GetString("MessageBox_InvalidInputAudioMaxQueuedFrames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid input for custom internal display resolution {0}.\nSetting it to default value ({1}).
        /// </summary>
        public static string MessageBox_InvalidInputInternalDisplayResolution {
            get {
                return ResourceManager.GetString("MessageBox_InvalidInputInternalDisplayResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query Occlusion Sample {0} Threshold must be a number.\nSetting the default value of {1}..
        /// </summary>
        public static string MessageBox_InvalidInputQueryOcclusionSample {
            get {
                return ResourceManager.GetString("MessageBox_InvalidInputQueryOcclusionSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keybinding Added.
        /// </summary>
        public static string MessageBox_KeybindingAdded {
            get {
                return ResourceManager.GetString("MessageBox_KeybindingAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Added binding: {0} = {1}.
        /// </summary>
        public static string MessageBox_KeybindingAddedText {
            get {
                return ResourceManager.GetString("MessageBox_KeybindingAddedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing Directory.
        /// </summary>
        public static string MessageBox_MissingDirectory {
            get {
                return ResourceManager.GetString("MessageBox_MissingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This game has no directory called &apos;{0}&apos;.
        /// </summary>
        public static string MessageBox_MissingDirectoryText {
            get {
                return ResourceManager.GetString("MessageBox_MissingDirectoryText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia {0} emulator information is missing. Please install Xenia {0}before updating..
        /// </summary>
        public static string MessageBox_MissingEmulatorInfo {
            get {
                return ResourceManager.GetString("MessageBox_MissingEmulatorInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has no game save backups.
        /// </summary>
        public static string MessageBox_MissingGameSaveBackupsText {
            get {
                return ResourceManager.GetString("MessageBox_MissingGameSaveBackupsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No game save backups.
        /// </summary>
        public static string MessageBox_MissingGameSaveBackupsTitle {
            get {
                return ResourceManager.GetString("MessageBox_MissingGameSaveBackupsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has currently no optimized settings..
        /// </summary>
        public static string MessageBox_MissingOptimizedSettingsText {
            get {
                return ResourceManager.GetString("MessageBox_MissingOptimizedSettingsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Missing.
        /// </summary>
        public static string MessageBox_MissingXenia {
            get {
                return ResourceManager.GetString("MessageBox_MissingXenia", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Detected Title ID ({0}) doesn&apos;t match selected game ({1}).\nContinue anyway?.
        /// </summary>
        public static string MessageBox_MissmatchedTitleIdText {
            get {
                return ResourceManager.GetString("MessageBox_MissmatchedTitleIdText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mismatched Title ID.
        /// </summary>
        public static string MessageBox_MissmatchedTitleIdTitle {
            get {
                return ResourceManager.GetString("MessageBox_MissmatchedTitleIdTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to fetch keybindings for {0}..
        /// </summary>
        public static string MessageBox_NoMousehookBindingsText {
            get {
                return ResourceManager.GetString("MessageBox_NoMousehookBindingsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature isn&apos;t implemented yet..
        /// </summary>
        public static string MessageBox_NotImplementedText {
            get {
                return ResourceManager.GetString("MessageBox_NotImplementedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not Implemented.
        /// </summary>
        public static string MessageBox_NotImplementedTitle {
            get {
                return ResourceManager.GetString("MessageBox_NotImplementedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You went over the allowed limit of characters for this field..
        /// </summary>
        public static string MessageBox_OverAllowedTextLimit {
            get {
                return ResourceManager.GetString("MessageBox_OverAllowedTextLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches have been installed for {0}..
        /// </summary>
        public static string MessageBox_PatchesInstalledText {
            get {
                return ResourceManager.GetString("MessageBox_PatchesInstalledText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches installed.
        /// </summary>
        public static string MessageBox_PatchesInstalledTitle {
            get {
                return ResourceManager.GetString("MessageBox_PatchesInstalledTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches have been removed for {0}..
        /// </summary>
        public static string MessageBox_PatchesRemovedText {
            get {
                return ResourceManager.GetString("MessageBox_PatchesRemovedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Patches removed.
        /// </summary>
        public static string MessageBox_PatchesRemovedTitle {
            get {
                return ResourceManager.GetString("MessageBox_PatchesRemovedTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string MessageBox_Remove {
            get {
                return ResourceManager.GetString("MessageBox_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove the content folder for {0}?\nThis will delete all installed title updates, save games, and related content..
        /// </summary>
        public static string MessageBox_RemoveGameContentText {
            get {
                return ResourceManager.GetString("MessageBox_RemoveGameContentText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove {0} content.
        /// </summary>
        public static string MessageBox_RemoveGameContentTitle {
            get {
                return ResourceManager.GetString("MessageBox_RemoveGameContentTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to remove {0}?.
        /// </summary>
        public static string MessageBox_RemoveGameText {
            get {
                return ResourceManager.GetString("MessageBox_RemoveGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The save file for {0} has been exported to desktop.
        /// </summary>
        public static string MessageBox_SaveExportedToDesktop {
            get {
                return ResourceManager.GetString("MessageBox_SaveExportedToDesktop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Success.
        /// </summary>
        public static string MessageBox_Success {
            get {
                return ResourceManager.GetString("MessageBox_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The content file {0} for {1} has been successfully deleted..
        /// </summary>
        public static string MessageBox_SuccessDeleteGameContentText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessDeleteGameContentText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The save game for {0} has been successfully deleted..
        /// </summary>
        public static string MessageBox_SuccessDeleteSaveGameText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessDeleteSaveGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia {0} log file has been exported to Desktop..
        /// </summary>
        public static string MessageBox_SuccessExportLogsText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessExportLogsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} patch has been installed..
        /// </summary>
        public static string MessageBox_SuccessGamePatchInstall {
            get {
                return ResourceManager.GetString("MessageBox_SuccessGamePatchInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia {0} has been successfully installed..
        /// </summary>
        public static string MessageBox_SuccessInstallXeniaText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessInstallXeniaText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optimized Settings:
        ///{0}
        ///have been successfully loaded.
        ///To apply them, please click the &apos;Save Changes&apos; button..
        /// </summary>
        public static string MessageBox_SuccessOptimizedSettingsText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessOptimizedSettingsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully redownloaded Mousehook Bindings..
        /// </summary>
        public static string MessageBox_SuccessRedownloadMousehookBindingsText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessRedownloadMousehookBindingsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia {0} has been successfully redownloaded..
        /// </summary>
        public static string MessageBox_SuccessReinstallXeniaText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessReinstallXeniaText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes to the configuration files have been saved..
        /// </summary>
        public static string MessageBox_SuccessSaveChangesText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessSaveChangesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia {0} has been successfully uninstalled..
        /// </summary>
        public static string MessageBox_SuccessUninstallXeniaText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessUninstallXeniaText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Successfully updated Xenia {0} game controller database..
        /// </summary>
        public static string MessageBox_SuccessUpdateGameControllerDatabaseText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessUpdateGameControllerDatabaseText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia {0} has been successfully updated..
        /// </summary>
        public static string MessageBox_SuccessUpdateXeniaText {
            get {
                return ResourceManager.GetString("MessageBox_SuccessUpdateXeniaText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You switched build type for Xenia {0}.
        ///Do you want to check for updates?.
        /// </summary>
        public static string MessageBox_SwitchNightlyBuildText {
            get {
                return ResourceManager.GetString("MessageBox_SwitchNightlyBuildText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switched Xenia {0} Build.
        /// </summary>
        public static string MessageBox_SwitchNightlyBuildTitle {
            get {
                return ResourceManager.GetString("MessageBox_SwitchNightlyBuildTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is now using Xenia {1}..
        /// </summary>
        public static string MessageBox_SwitchXeniaVersion {
            get {
                return ResourceManager.GetString("MessageBox_SwitchXeniaVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to We couldn&apos;t find the selected game in the database.\nDo you want to add it with default artwork (Press &quot;Yes&quot;) or retry (Press &quot;No&quot;)?.
        /// </summary>
        public static string MessageBox_UnableFindSelectedGameText {
            get {
                return ResourceManager.GetString("MessageBox_UnableFindSelectedGameText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Couldn&apos;t find the selected game.
        /// </summary>
        public static string MessageBox_UnableFindSelectedGameTitle {
            get {
                return ResourceManager.GetString("MessageBox_UnableFindSelectedGameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Unified content folder&quot; requires administrative rights. 
        ///Please run app as administrator or disable the option to be able to install Xenia..
        /// </summary>
        public static string MessageBox_UnifiedContentFolderAdministratorRequiredText {
            get {
                return ResourceManager.GetString("MessageBox_UnifiedContentFolderAdministratorRequiredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia {0} settings have been reset..
        /// </summary>
        public static string MessageBox_XeniaSettingsResetText {
            get {
                return ResourceManager.GetString("MessageBox_XeniaSettingsResetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add new keybinding.
        /// </summary>
        public static string MousehookControlsEditor_AddKeybindingTooltip {
            get {
                return ResourceManager.GetString("MousehookControlsEditor_AddKeybindingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Keybinding.
        /// </summary>
        public static string MousehookControlsEditor_DeleteKeybinding {
            get {
                return ResourceManager.GetString("MousehookControlsEditor_DeleteKeybinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select directory.
        /// </summary>
        public static string OpenFileDialog_SelectDirectoryTitle {
            get {
                return ResourceManager.GetString("OpenFileDialog_SelectDirectoryTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a game patch file.
        /// </summary>
        public static string OpenFileDialog_SelectGamePatchTitle {
            get {
                return ResourceManager.GetString("OpenFileDialog_SelectGamePatchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a game.
        /// </summary>
        public static string OpenFileDialog_SelectGameTitle {
            get {
                return ResourceManager.GetString("OpenFileDialog_SelectGameTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Xenia Executable.
        /// </summary>
        public static string OpenFileDialog_SelectXeniaExecutable {
            get {
                return ResourceManager.GetString("OpenFileDialog_SelectXeniaExecutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change Gamertag.
        /// </summary>
        public static string ProfileEditor_ChangeGamertag {
            get {
                return ResourceManager.GetString("ProfileEditor_ChangeGamertag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter your new gamertag below..
        /// </summary>
        public static string ProfileEditor_ChangeGamertagTooltip {
            get {
                return ResourceManager.GetString("ProfileEditor_ChangeGamertagTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Image.
        /// </summary>
        public static string ScreenshotContextMenu_CopyImage {
            get {
                return ResourceManager.GetString("ScreenshotContextMenu_CopyImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string ScreenshotContextMenu_DeleteScreenshot {
            get {
                return ResourceManager.GetString("ScreenshotContextMenu_DeleteScreenshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Fullscreen.
        /// </summary>
        public static string ScreenshotContextMenu_OpenFullscreen {
            get {
                return ResourceManager.GetString("ScreenshotContextMenu_OpenFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show in Explorer.
        /// </summary>
        public static string ScreenshotContextMenu_ShowInExplorer {
            get {
                return ResourceManager.GetString("ScreenshotContextMenu_ShowInExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search.
        /// </summary>
        public static string Searchbar_PlaceholderText {
            get {
                return ResourceManager.GetString("Searchbar_PlaceholderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accent Color.
        /// </summary>
        public static string SettingsPage_AccentColorSelector {
            get {
                return ResourceManager.GetString("SettingsPage_AccentColorSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes the accent color used by Xenia Manager.
        /// </summary>
        public static string SettingsPage_AccentColorSelectorTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_AccentColorSelectorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Auto-Update Xenia.
        /// </summary>
        public static string SettingsPage_AutoEmulatorUpdate {
            get {
                return ResourceManager.GetString("SettingsPage_AutoEmulatorUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, the emulator will update in the background
        ///NOTE: You can&apos;t use Xenia during the update process.
        /// </summary>
        public static string SettingsPage_AutoEmulatorUpdateTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_AutoEmulatorUpdateTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatic Save Backup.
        /// </summary>
        public static string SettingsPage_AutomaticSaveBackup {
            get {
                return ResourceManager.GetString("SettingsPage_AutomaticSaveBackup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option to automatically back up save files to the Backup folder next to Xenia Manager
        ///each time Xenia Manager is closed.
        /// </summary>
        public static string SettingsPage_AutomaticSaveBackupTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_AutomaticSaveBackupTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Window Backdrop.
        /// </summary>
        public static string SettingsPage_BackdropSelector {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Changes the window backdrop.
        /// </summary>
        public static string SettingsPage_BackdropSelectorTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_BackdropSelectorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double Click To Open Game.
        /// </summary>
        public static string SettingsPage_DoubleClickOpen {
            get {
                return ResourceManager.GetString("SettingsPage_DoubleClickOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable this option to require a double-click to open a game from the library.
        ///When disabled, games will launch with a single click instead..
        /// </summary>
        public static string SettingsPage_DoubleClickOpenTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_DoubleClickOpenTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language.
        /// </summary>
        public static string SettingsPage_LanguageSelector {
            get {
                return ResourceManager.GetString("SettingsPage_LanguageSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Manager UI language.
        /// </summary>
        public static string SettingsPage_LanguageSelectorTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_LanguageSelectorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Profile Slot.
        /// </summary>
        public static string SettingsPage_ProfileSlot {
            get {
                return ResourceManager.GetString("SettingsPage_ProfileSlot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the profile slot whose save files will be automatically backed up each time you exit Xenia.
        /// </summary>
        public static string SettingsPage_ProfileSlotTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_ProfileSlotTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading Screen.
        /// </summary>
        public static string SettingsPage_ShowLoadingScreen {
            get {
                return ResourceManager.GetString("SettingsPage_ShowLoadingScreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, game&apos;s background will be shown while the emulator is launching.
        /// </summary>
        public static string SettingsPage_ShowLoadingScreenTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_ShowLoadingScreenTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme.
        /// </summary>
        public static string SettingsPage_ThemeSelector {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme which will be used by Xenia Manager.
        /// </summary>
        public static string SettingsPage_ThemeSelectorTooltip {
            get {
                return ResourceManager.GetString("SettingsPage_ThemeSelectorTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image has been copied to your clipboard.
        /// </summary>
        public static string SnackbarPresenter_CopiedImageText {
            get {
                return ResourceManager.GetString("SnackbarPresenter_CopiedImageText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image Copied.
        /// </summary>
        public static string SnackbarPresenter_CopiedImageTitle {
            get {
                return ResourceManager.GetString("SnackbarPresenter_CopiedImageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open &quot;About&quot; page to update Xenia Manager.
        /// </summary>
        public static string SnackbarPresenter_XeniaManagerUpdateAvailableText {
            get {
                return ResourceManager.GetString("SnackbarPresenter_XeniaManagerUpdateAvailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia Manager has a new update.
        /// </summary>
        public static string SnackbarPresenter_XeniaManagerUpdateAvailableTitle {
            get {
                return ResourceManager.GetString("SnackbarPresenter_XeniaManagerUpdateAvailableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open &quot;Manage&quot; page to update these Xenia versions to new version:.
        /// </summary>
        public static string SnackbarPresenter_XeniaUpdateAvailableText {
            get {
                return ResourceManager.GetString("SnackbarPresenter_XeniaUpdateAvailableText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xenia has a new update.
        /// </summary>
        public static string SnackbarPresenter_XeniaUpdateAvailableTitle {
            get {
                return ResourceManager.GetString("SnackbarPresenter_XeniaUpdateAvailableTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Experimental.
        /// </summary>
        public static string ToggleVersionSwitch_Experimental {
            get {
                return ResourceManager.GetString("ToggleVersionSwitch_Experimental", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Nightly.
        /// </summary>
        public static string ToggleVersionSwitch_Nightly {
            get {
                return ResourceManager.GetString("ToggleVersionSwitch_Nightly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stable.
        /// </summary>
        public static string ToggleVersionSwitch_Stable {
            get {
                return ResourceManager.GetString("ToggleVersionSwitch_Stable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Xenia Version.
        /// </summary>
        public static string XeniaSelection_MainText {
            get {
                return ResourceManager.GetString("XeniaSelection_MainText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Queued Frames.
        /// </summary>
        public static string XeniaSettingsPage_AudioMaxQueuedFramesSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioMaxQueuedFramesSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows changing max buffered audio frames to reduce audio delay
        ///NOTE: Minimum is 4.
        /// </summary>
        public static string XeniaSettingsPage_AudioMaxQueuedFramesSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioMaxQueuedFramesSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mute.
        /// </summary>
        public static string XeniaSettingsPage_AudioMuteSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioMuteSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mutes all audio output.
        /// </summary>
        public static string XeniaSettingsPage_AudioMuteSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioMuteSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio.
        /// </summary>
        public static string XeniaSettingsPage_AudioSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio System.
        /// </summary>
        public static string XeniaSettingsPage_AudioSystemSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioSystemSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio System.
        /// </summary>
        public static string XeniaSettingsPage_AudioSystemSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioSystemSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dedicated XMA Thread.
        /// </summary>
        public static string XeniaSettingsPage_AudioUseDedicatedXmaThreadSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioUseDedicatedXmaThreadSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables XMA decoding on separate thread
        ///With this option disabled, expect better results, but lower performance.
        /// </summary>
        public static string XeniaSettingsPage_AudioUseDedicatedXmaThreadSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioUseDedicatedXmaThreadSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XMA Audio Decoder
        ///(Experimental).
        /// </summary>
        public static string XeniaSettingsPage_AudioXmaDecoderSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmaDecoderSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables the usage of new XMA audio decoder.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmaDecoderSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmaDecoderSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XMP.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmpSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmpSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables Music Player playback
        ///This can fix music in some games.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmpSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmpSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XMP Default Volume.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmpVolumeSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmpVolumeSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default music volume if game doesn&apos;t set it.
        /// </summary>
        public static string XeniaSettingsPage_AudioXmpVolumeSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_AudioXmpVolumeSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Display Resolution Height.
        /// </summary>
        public static string XeniaSettingsPage_DisplayCustomInternalResolutionHeightSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayCustomInternalResolutionHeightSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported: 1-1080.
        /// </summary>
        public static string XeniaSettingsPage_DisplayCustomInternalResolutionHeightSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayCustomInternalResolutionHeightSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Display Resolution Width.
        /// </summary>
        public static string XeniaSettingsPage_DisplayCustomInternalResolutionWidthSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayCustomInternalResolutionWidthSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported: 1-1920.
        /// </summary>
        public static string XeniaSettingsPage_DisplayCustomInternalResolutionWidthSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayCustomInternalResolutionWidthSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framerate Limit.
        /// </summary>
        public static string XeniaSettingsPage_DisplayFramerateLimitSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayFramerateLimitSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum frames per second
        ///Defaults to 60 when set to 0 and VSYNC is enabled
        ///0 = Unlimited Frames.
        /// </summary>
        public static string XeniaSettingsPage_DisplayFramerateLimitSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayFramerateLimitSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fullscreen.
        /// </summary>
        public static string XeniaSettingsPage_DisplayFullscreenSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayFullscreenSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the emulator in fullscreen when enabled.
        /// </summary>
        public static string XeniaSettingsPage_DisplayFullscreenSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayFullscreenSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal Display Resolution.
        /// </summary>
        public static string XeniaSettingsPage_DisplayInternalResolutionSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayInternalResolutionSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the game that support different resolutions to be rendered in specific resolution
        ///NOTE: The game has to actually support the resolution for this to work. 1280x720 will work in pretty much every game..
        /// </summary>
        public static string XeniaSettingsPage_DisplayInternalResolutionSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayInternalResolutionSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Letterbox.
        /// </summary>
        public static string XeniaSettingsPage_DisplayLetterboxSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayLetterboxSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables Black Bars
        ///(Letterboxing/Pillarboxing).
        /// </summary>
        public static string XeniaSettingsPage_DisplayLetterboxSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayLetterboxSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query Occlusion Fake Sample Count
        ///(Lower Threshold).
        /// </summary>
        public static string XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountLowerSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountLowerSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set to -1 no sample counts are written, games may hang
        ///Else, the sample count of every tile will be incremented on every EVENT_WRITE_ZPD by this number
        ///Setting this to 0 means everything is reported as occluded.
        /// </summary>
        public static string XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountLowerSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountLowerSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Query Occlusion Fake Sample Count
        ///(Upper Threshold).
        /// </summary>
        public static string XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountUpperSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountUpperSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set to higher number than query_occlusion_sample_lower_threshold
        ///This value is ignored if query_occlusion_sample_lower_threshold is set to -1.
        /// </summary>
        public static string XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountUpperSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayQueryOcclusionFakeSampleCountUpperSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display.
        /// </summary>
        public static string XeniaSettingsPage_DisplaySettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplaySettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical Sync.
        /// </summary>
        public static string XeniaSettingsPage_DisplayVSyncSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayVSyncSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables Vertical Sync.
        /// </summary>
        public static string XeniaSettingsPage_DisplayVSyncSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayVSyncSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Widescreen.
        /// </summary>
        public static string XeniaSettingsPage_DisplayWidescreenSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayWidescreenSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggles between 16:9 and 4:3 aspect ratio
        ///NOTE: Resolutions below 1280x720 run at 4:3 aspect ratio.
        /// </summary>
        public static string XeniaSettingsPage_DisplayWidescreenSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_DisplayWidescreenSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Plugins.
        /// </summary>
        public static string XeniaSettingsPage_GeneralAllowPluginsSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralAllowPluginsSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows loading of plugins/trainers from plugins\title_id\plugin.xex
        ///Plugin are homebrew xex modules which can be used for making mods
        ///NOTE: This feature is experimental.
        /// </summary>
        public static string XeniaSettingsPage_GeneralAllowPluginsSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralAllowPluginsSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Patches.
        /// </summary>
        public static string XeniaSettingsPage_GeneralApplyPatchesSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralApplyPatchesSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables custom patching functionality
        ///If disabled, game patches like 60FPS patch won&apos;t work.
        /// </summary>
        public static string XeniaSettingsPage_GeneralApplyPatchesSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralApplyPatchesSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title Updates.
        /// </summary>
        public static string XeniaSettingsPage_GeneralApplyTitleUpdatesSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralApplyTitleUpdatesSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables applying title updates.
        /// </summary>
        public static string XeniaSettingsPage_GeneralApplyTitleUpdatesSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralApplyTitleUpdatesSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discord Rich Presence.
        /// </summary>
        public static string XeniaSettingsPage_GeneralDiscordSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralDiscordSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show your activity on Discord.
        /// </summary>
        public static string XeniaSettingsPage_GeneralDiscordSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralDiscordSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Mask.
        /// </summary>
        public static string XeniaSettingsPage_GeneralLicenseMaskSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralLicenseMaskSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - No License
        ///- First License (Generally the full version license in Xbox Live Arcade titles)
        ///- All Licenses (All possible licenses enabled, but it could lead to some undefined behavior).
        /// </summary>
        public static string XeniaSettingsPage_GeneralLicenseMaskSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralLicenseMaskSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        public static string XeniaSettingsPage_GeneralSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Achievement Notifications.
        /// </summary>
        public static string XeniaSettingsPage_GeneralShowAchievementNotificationSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralShowAchievementNotificationSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show achievement notification on screen.
        /// </summary>
        public static string XeniaSettingsPage_GeneralShowAchievementNotificationSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralShowAchievementNotificationSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Country.
        /// </summary>
        public static string XeniaSettingsPage_GeneralUserCountrySettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralUserCountrySettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used for changing country (Games can use this to change their language).
        /// </summary>
        public static string XeniaSettingsPage_GeneralUserCountrySettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralUserCountrySettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Language.
        /// </summary>
        public static string XeniaSettingsPage_GeneralUserLanguageSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralUserLanguageSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used for changing language in games (If they support it).
        /// </summary>
        public static string XeniaSettingsPage_GeneralUserLanguageSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GeneralUserLanguageSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graphics.
        /// </summary>
        public static string XeniaSettingsPage_GraphicalSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicalSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Invalid Fetch Constants.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsAllowInvalidFetchConstantsSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsAllowInvalidFetchConstantsSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow texture and vertex fetch constants with invalid type
        ///Generally unsafe because the constant may contain completely invalid values,
        ///but may be used to bypass fetch constant type errors in certain games 
        ///until the real reason why they&apos;re invalid is found.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsAllowInvalidFetchConstantsSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsAllowInvalidFetchConstantsSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Anti-Aliasing.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsAntiAliasingSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsAntiAliasingSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post-processing anti-aliasing effect to apply to the image output of the game
        ///Heavily recommended when AMD FidelityFX Contrast Adaptive Sharpening or Super Resolution 1.0 is active
        ///- FXAA (NVIDIA Fast Approximate Anti-Aliasing 3.11, normal quality preset)
        ///- FXAA Extreme (NVIDIA Fast Approximate Anti-Aliasing 3.11, extreme quality preset).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsAntiAliasingSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsAntiAliasingSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CAS Additional Sharpness.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsCASAdditionalSharpnessSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsCASAdditionalSharpnessSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Additional sharpness for AMD FidelityFX Contrast Adaptive Sharpening (CAS)
        ///(Higher is sharper).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsCASAdditionalSharpnessSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsCASAdditionalSharpnessSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Queue Priority
        ///(Direct3D 12).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12QueuePrioritySettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12QueuePrioritySettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Normal
        ///- High (Default, recommended for speed)
        ///- Global Realtime (Requires running Xenia/Xenia Manager as Administrator).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12QueuePrioritySettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12QueuePrioritySettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Render Target Path
        ///(Direct3D 12).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12RenderTargetPathSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12RenderTargetPathSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to RTV (Recommended for speed)
        ///ROV aka Rasterized-Ordered Views (For higher accuracy in some cases if available).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12RenderTargetPathSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12RenderTargetPathSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variable Refresh Rate
        ///(Direct3D 12).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12VRRSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12VRRSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Screen tearing and Variable Refresh Rate.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsD3D12VRRSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsD3D12VRRSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Draw Resolution Scale.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsDrawResolutionScaleSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsDrawResolutionScaleSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integer pixel width scale used for scaling the rendering resolution opaquely to the game
        ///1, 2 and 3 are supported, though in the documentation, this value can go to 7 (8960x5040)
        ///If set to 2, render resolution goes from 720p to 1440p, if set to 3 to 4k...
        ///NOTE: Various effects and parts of game rendering pipelines may work incorrectly.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsDrawResolutionScaleSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsDrawResolutionScaleSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FSR Max Upsampling Passes.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsFSRMaxUpsamlingPassesSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsFSRMaxUpsamlingPassesSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum number of upsampling passes performed in AMD FidelityFX Super Resolution 1.0 (FSR) before falling back to bilinear stretching after the final pass
        /// Each pass upscales only to up to 2x2 the previous size
        ///If the game outputs a 1280x720 image, 1 pass will upscale it to up to 2560x1440 (below 4K), 
        ///after 2 passes it will be upscaled to a maximum of 5120x2880 (including 3840x2160 for 4K)...
        ///This variable has no effect if the display resolution isn&apos;t very high, 
        ///but may be reduced on resolutions like [rest of string was truncated]&quot;;.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsFSRMaxUpsamlingPassesSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsFSRMaxUpsamlingPassesSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FSR Sharpness Reduction.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsFSRSharpnessReductionSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsFSRSharpnessReductionSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sharpness reduction for AMD FidelityFX Super Resolution 1.0 (FSR), in stops
        ///(Lower is sharper).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsFSRSharpnessReductionSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsFSRSharpnessReductionSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gamma Render Target as sRGB.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsGammaRenderTargetAsSRgbSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsGammaRenderTargetAsSRgbSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When the host can&apos;t write piecewise linear gamma directly with correct blending,
        ///use sRGB output on the host for conceptually correct blending in linear color space
        ///while having slightly different precision distribution in the render target 
        ///and severely incorrect values if the game accesses the resulting colors directly as raw data.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsGammaRenderTargetAsSRgbSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsGammaRenderTargetAsSRgbSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Graphics API.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsGpuApiSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsGpuApiSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post Process Dither.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsPostProcessDitherSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsPostProcessDitherSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dither the final image output from the internal precision to 8 bits per channel so gradients are smoother
        ///On a 10bpc display, the lower 2 bits will still be kept, but noise will be added to them
        ///Disabling may be recommended for 10bpc, but it depends on the 10bpc displaying capabilities of the actual display used.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsPostProcessDitherSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsPostProcessDitherSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Readback Resolve.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsReadbackResolveSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsReadbackResolveSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read render-to-texture results on the CPU
        ///This may be needed in some games, 
        ///but causes mid-frame synchronization, so it has a huge performance impact.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsReadbackResolveSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsReadbackResolveSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaling &amp; Sharpening.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsScalingSharpeningSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsScalingSharpeningSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post-processing effect to use for resampling and/or sharpening of the final display output
        ///- Bilinear (Original image at 1:1, simple bilinear stretching for resampling)
        ///- FidelityFX CAS (Use AMD FidelityFX Contrast Adaptive Sharpening (CAS) for sharpening at scaling factors of up to 2x2, with additional bilinear stretching for larger factors)
        ///- AMD FSR (Use AMD FidelityFX Super Resolution 1.0 (FSR) for highest-quality upscaling, or AMD FidelityFX Contrast Adaptive Sharpening for sharpening while not scal [rest of string was truncated]&quot;;.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsScalingSharpeningSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsScalingSharpeningSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fuzzy Alpha Epsilon.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsUseFuzzyAlphaEpsilonSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsUseFuzzyAlphaEpsilonSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use approximate compare for alpha values to prevent flickering on NVIDIA graphics cards.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsUseFuzzyAlphaEpsilonSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsUseFuzzyAlphaEpsilonSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Present Mode FIFO Relaxed
        ///(Vulkan).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeFifoRelaxedSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeFifoRelaxedSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lowest priority present mode
        ///Allows the relaxed first-in first-out presentation mode, 
        ///which causes waiting for host display vertical sync, 
        ///but may present with tearing if frames don&apos;t meet the host display refresh rate.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeFifoRelaxedSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeFifoRelaxedSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Present Mode Intermediate
        ///(Vulkan).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeIntermediateSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeIntermediateSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Highest priority present mode
        ///Allows the immediate presentation mode, 
        ///offering the lowest latency with the possibility of screen tearing in certain cases and variable refresh rate
        ///NOTE: If this doesn&apos;t work, try the other 2 present modes.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeIntermediateSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeIntermediateSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Present Mode Mailbox
        ///(Vulkan).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeMailboxSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeMailboxSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Middle priority present mode
        ///Allows the mailbox presentation mode (2nd priority), 
        ///offering low latency without the possibility of tearing
        ///NOTE: If this doesn&apos;t work, try FIFO Relaxed present mode.
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanAllowPresentModeMailboxSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanAllowPresentModeMailboxSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Render Target Path
        ///(Vulkan).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanRenderTargetPathSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanRenderTargetPathSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - FBO (Recommended for speed)
        ///- FSI (For higher accuracy in some cases if available).
        /// </summary>
        public static string XeniaSettingsPage_GraphicsVulkanRenderTargetPathSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_GraphicsVulkanRenderTargetPathSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Break On Unimplemented Instructions.
        /// </summary>
        public static string XeniaSettingsPage_HacksBreakOnUnimplementedInstructionsSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksBreakOnUnimplementedInstructionsSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Break to the host debugger (or crash if no debugger attached) if an unimplemented PowerPC instruction is encountered
        ///- On (default)
        ///- Off (hack, needed for certain games).
        /// </summary>
        public static string XeniaSettingsPage_HacksBreakOnUnimplementedInstructionsSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksBreakOnUnimplementedInstructionsSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear GPU Cache.
        /// </summary>
        public static string XeniaSettingsPage_HacksClearGpuCacheSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksClearGpuCacheSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh the state of memory pages to enable gpu written data
        ///- On (worsens performance, but can help reduce visual anomalies like polygon explosions or corrupted textures)
        ///- Off (default).
        /// </summary>
        public static string XeniaSettingsPage_HacksClearGpuCacheSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksClearGpuCacheSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command Line (cl).
        /// </summary>
        public static string XeniaSettingsPage_HacksCommandLineSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksCommandLineSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify additional command-line provided to guest.
        /// </summary>
        public static string XeniaSettingsPage_HacksCommandLineSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksCommandLineSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Context Promotion.
        /// </summary>
        public static string XeniaSettingsPage_HacksDisableContextPromotionSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksDisableContextPromotionSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables Context Promotion optimizations
        ///This may be needed for some sports games, but will reduce performance.
        /// </summary>
        public static string XeniaSettingsPage_HacksDisableContextPromotionSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksDisableContextPromotionSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disassemble Functions.
        /// </summary>
        public static string XeniaSettingsPage_HacksDisassembleFunctionsSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksDisassembleFunctionsSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disassemble functions during generation
        ///This can be used as an alternative to Readback Resolve in some games.
        /// </summary>
        public static string XeniaSettingsPage_HacksDisassembleFunctionsSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksDisassembleFunctionsSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hacks.
        /// </summary>
        public static string XeniaSettingsPage_HackSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HackSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect Zero Page.
        /// </summary>
        public static string XeniaSettingsPage_HacksProtectZeroSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksProtectZeroSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Protect the zero page from reads and writes
        ///- On (default)
        ///- Off (hack, needed for certain games).
        /// </summary>
        public static string XeniaSettingsPage_HacksProtectZeroSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksProtectZeroSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scribble Heap.
        /// </summary>
        public static string XeniaSettingsPage_HacksScribbleHeapSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksScribbleHeapSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scribble 0xCD into all allocated heap memory
        ///This can be used as an alternative to Readback Resolve in some games.
        /// </summary>
        public static string XeniaSettingsPage_HacksScribbleHeapSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_HacksScribbleHeapSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mousehook.
        /// </summary>
        public static string XeniaSettingsPage_MousehookSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_MousehookSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API Address.
        /// </summary>
        public static string XeniaSettingsPage_NetplayApiAddressSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NetplayApiAddressSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Address that points to the Xenia WebServices which is required for online play.
        /// </summary>
        public static string XeniaSettingsPage_NetplayApiAddressSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NetplayApiAddressSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Network Mode.
        /// </summary>
        public static string XeniaSettingsPage_NetplayNetworkModeSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NetplayNetworkModeSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to choose between different Network Types.
        /// </summary>
        public static string XeniaSettingsPage_NetplayNetworkModeSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NetplayNetworkModeSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Netplay.
        /// </summary>
        public static string XeniaSettingsPage_NetplaySettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NetplaySettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to UPnP
        ///(Universal Plug and Play).
        /// </summary>
        public static string XeniaSettingsPage_NetplayUPnPSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NetplayUPnPSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be enabled to host sessions.
        /// </summary>
        public static string XeniaSettingsPage_NetplayUPnPSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NetplayUPnPSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XLink Kai Systemlink Hacks.
        /// </summary>
        public static string XeniaSettingsPage_NetplayXLinkKaiSystemLinkHacksSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NetplayXLinkKaiSystemLinkHacksSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable hacks for XLink Kai support.
        /// </summary>
        public static string XeniaSettingsPage_NetplayXLinkKaiSystemLinkHacksSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NetplayXLinkKaiSystemLinkHacksSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Framerate Limit
        ///(NVIDIA).
        /// </summary>
        public static string XeniaSettingsPage_NvidiaFramerateLimitSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NvidiaFramerateLimitSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum frames per second
        ///Make sure Xenia&apos;s Framerate Limiter is set to 0 for this to work.
        /// </summary>
        public static string XeniaSettingsPage_NvidiaFramerateLimitSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NvidiaFramerateLimitSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical Sync
        ///(NVIDIA).
        /// </summary>
        public static string XeniaSettingsPage_NvidiaVSyncSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NvidiaVSyncSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Vertical Sync from NVIDIA Control Panel
        /// Turn off Xenia&apos;s Vertical Sync if you plan on using this one
        ///- Default (Use the 3D application settings)
        ///- Force Off - Allows GPU to render unconstrained by refresh rate, but it can cause screen tearing
        ///- Force On - Limits the GPU Render rate to the max refresh rate of the monitor and avoids tearing
        ///- 1/2 Refresh Rate - Limits the GPU render rate to half the monitor’s refresh rate
        ///- 1/3 Refresh Rate - Limits the GPU render rate to one-third the monitor’s [rest of string was truncated]&quot;;.
        /// </summary>
        public static string XeniaSettingsPage_NvidiaVSyncSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_NvidiaVSyncSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the selected profile&apos;s configuration file in a text editor
        ///Please close the text editor when you&apos;re done with the changes
        ///This is intended for advanced users.
        /// </summary>
        public static string XeniaSettingsPage_OpenInEditorButtonTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_OpenInEditorButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looks up for the optimized settings in the repository and applies them
        ///To save the changes, press the &quot;Save Changes&quot; button.
        /// </summary>
        public static string XeniaSettingsPage_OptimizeSettingsButtonTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_OptimizeSettingsButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copies all of the settings from the default configuration file to the currently selected game configuration
        ///This only reads the settings from the default profile into the UI and it doesn&apos;t save the changes.
        /// </summary>
        public static string XeniaSettingsPage_ResetSettingsButtonTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_ResetSettingsButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saves changes to settings.
        /// </summary>
        public static string XeniaSettingsPage_SaveSettingsButtonTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_SaveSettingsButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mount Cache.
        /// </summary>
        public static string XeniaSettingsPage_StorageMountCacheSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageMountCacheSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable cache mount
        ///Can fix some games.
        /// </summary>
        public static string XeniaSettingsPage_StorageMountCacheSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageMountCacheSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mount Scratch.
        /// </summary>
        public static string XeniaSettingsPage_StorageMountScratchSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageMountScratchSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable scratch mount.
        /// </summary>
        public static string XeniaSettingsPage_StorageMountScratchSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageMountScratchSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Storage.
        /// </summary>
        public static string XeniaSettingsPage_StorageSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_StorageSettingsTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller Hotkeys.
        /// </summary>
        public static string XeniaSettingsPage_UserInputControllerHotkeysSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputControllerHotkeysSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hotkeys for Xbox and PS controllers
        ///NOTE: Can interfere with the gameplay.
        /// </summary>
        public static string XeniaSettingsPage_UserInputControllerHotkeysSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputControllerHotkeysSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller Vibration.
        /// </summary>
        public static string XeniaSettingsPage_UserInputControllerVibrationSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputControllerVibrationSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle controller vibration.
        /// </summary>
        public static string XeniaSettingsPage_UserInputControllerVibrationSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputControllerVibrationSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input System.
        /// </summary>
        public static string XeniaSettingsPage_UserInputHidSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputHidSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Any (default)
        ///- SDL2 (needed for non-XInput controllers)
        ///- XInput (XInput controllers)
        ///- Winkey (keyboard).
        /// </summary>
        public static string XeniaSettingsPage_UserInputHidSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputHidSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard Mode.
        /// </summary>
        public static string XeniaSettingsPage_UserInputKeyboardModeSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputKeyboardModeSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Disabled
        ///- Enabled
        ///- Passthrough (Requires controller being connected).
        /// </summary>
        public static string XeniaSettingsPage_UserInputKeyboardModeSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputKeyboardModeSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard User Index.
        /// </summary>
        public static string XeniaSettingsPage_UserInputKeyboardUserIndexSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputKeyboardUserIndexSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Controller port that keyboard emulates.
        /// </summary>
        public static string XeniaSettingsPage_UserInputKeyboardUserIndexSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputKeyboardUserIndexSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left Stick Deadzone.
        /// </summary>
        public static string XeniaSettingsPage_UserInputLeftStickDeadzoneSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputLeftStickDeadzoneSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines deadzone level for the left stick.
        /// </summary>
        public static string XeniaSettingsPage_UserInputLeftStickDeadzoneSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputLeftStickDeadzoneSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aim Turn Distance.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookAimTurnDistanceSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookAimTurnDistanceSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distance crosshair can move in aim-mode before turning the camera
        ///[0 - 1].
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookAimTurnDistanceSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookAimTurnDistanceSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Autoaim.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookAutoaimSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookAutoaimSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable autoaim in games that support it.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookAutoaimSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookAutoaimSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GoldenEye 
        ///Debug Menu.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookGoldenEyeDebugMenuSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookGoldenEyeDebugMenuSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables the debug menu, accessible with LB/1.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookGoldenEyeDebugMenuSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookGoldenEyeDebugMenuSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Blur
        ///(GoldenEye).
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookGoldenEyeRemoveBlurSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookGoldenEyeRemoveBlurSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removes low-res blur when in classic-graphics mode.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookGoldenEyeRemoveBlurSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookGoldenEyeRemoveBlurSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gun Sway
        ///(GoldenEye/Perfect Dark).
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookGunSwaySettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookGunSwaySettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (GoldenEye/Perfect Dark) Enable gun sway as camera is turned.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookGunSwaySettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookGunSwaySettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert X Axis.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookInvertXSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookInvertXSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert mouse X axis.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookInvertXSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookInvertXSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert Y Axis.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookInvertYSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookInvertYSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invert mouse Y axis.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookInvertYSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookInvertYSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FOV Sensitivity.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookMousehookFovSensitivitySettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookMousehookFovSensitivitySettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse scale when FOV is lowered
        ///(Currently for Call of Duty, Dead Rising, Red Dead Redemption and UE3 Games).
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookMousehookFovSensitivitySettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookMousehookFovSensitivitySettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Menu Sensitivity.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookMousehookMenuSensitivitySettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookMousehookMenuSensitivitySettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (GoldenEye/Saints Row 1) Mouse sensitivity when in menus.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookMousehookMenuSensitivitySettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookMousehookMenuSensitivitySettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mouse Sensitivity.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookMousehookSensitivitySettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookMousehookSensitivitySettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the user to change the mouse sensitivity.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookMousehookSensitivitySettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookMousehookSensitivitySettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Snappy Wheel
        ///(Red Dead Redemption).
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookRdrSnappyWheelSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookRdrSnappyWheelSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Red Dead Redemption) Snaps the Weapon Wheel in 45 degree increments.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookRdrSnappyWheelSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookRdrSnappyWheelSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turbo Gallop Horse
        ///(Red Dead Redemption).
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookRdrTurboGallopHorseSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookRdrTurboGallopHorseSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enables turbo galloping for horses and coaches in Red Dead Redemption (Bound to Modifier same as Turbo sprint).
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookRdrTurboGallopHorseSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookRdrTurboGallopHorseSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Better Drive Cam
        ///(Saints Row 2).
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookSr2BetterDriveCamSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookSr2BetterDriveCamSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unties X rotation from vehicles when auto-centering is disabled akin to GTA IV.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookSr2BetterDriveCamSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookSr2BetterDriveCamSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Better Handbrake Camera
        ///(Saints Row 2).
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookSr2BetterHandbrakeCamSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookSr2BetterHandbrakeCamSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unties X rotation from vehicles when handbraking akin to Saints Row 1.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookSr2BetterHandbrakeCamSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookSr2BetterHandbrakeCamSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hold Fine Aim
        ///(Saints Row 2).
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookSr2HoldFineAimSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookSr2HoldFineAimSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switches fine aim (ADS) from a toggle to hold press.
        /// </summary>
        public static string XeniaSettingsPage_UserInputMousehookSr2HoldFineAimSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputMousehookSr2HoldFineAimSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right Stick Deadzone.
        /// </summary>
        public static string XeniaSettingsPage_UserInputRightStickDeadzoneSettingText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputRightStickDeadzoneSettingText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines deadzone level for the right stick.
        /// </summary>
        public static string XeniaSettingsPage_UserInputRightStickDeadzoneSettingTooltip {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputRightStickDeadzoneSettingTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Input.
        /// </summary>
        public static string XeniaSettingsPage_UserInputSettingsTitleText {
            get {
                return ResourceManager.GetString("XeniaSettingsPage_UserInputSettingsTitleText", resourceCulture);
            }
        }
    }
}
